local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "CRIMEONALATY SIGMA HUBBBB   (and other games)",
    LoadingTitle = "crimeWithNaloty SIGMAAAA hub",
    LoadingSubtitle = "by Merc",
    ConfigurationSaving = {
       Enabled = false,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "sigma"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg 
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "key system",
       Subtitle = "Locked",
       Note = "Updated! V.4 All Update Logs are in the new update section.",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Update V.4"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local MainTab = Window:CreateTab("sigma GUI's", nil) -- Title, Image      ---[main collection selector]---
 local MainSection = MainTab:CreateSection("sigma collection")

 Rayfield:Notify({
    Title = "you fricking zigger u really wanna hack on my script? fine.",
    Content = "we are sigma      theres more then crim too ig smh",
    Duration = 6.5,
    Image = nil,
    Actions = { -- Notification Buttons
       Ignore = {
          Name = "frfr my og gangster",
          Callback = function()
          print("you fucking <gfdshdzf")
       end
    },
 },
 })

 --------------------------------------------------------------------[ALL THE BUYERS]-------------------------------------------------------
  --------------------------------------------------[DISCORD NAMES:    quaggity_   liisffu     jamal04082 ]-------------------------------


 local Button = MainTab:CreateButton({
    Name = "Phantom Forces Silent aim + esp",
    Callback = function()
         --// Made by @dementia enjoyer
--// Forgive me for the very shit code, gonna rewrite dis later and actually try to make it look good lol
--// join .gg/syAGdFKAZQ for updates and more scripts like this <3 \\--

local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'homohack (made by @eldmonstret / dementia enjoyer)',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

--// Defined

local Camera = workspace.CurrentCamera
local Players = workspace.Players
local Ignore = workspace.Ignore
local DeadBodies = workspace.Ignore.DeadBody
local Misc = Ignore.Misc

--// Roblox

local Vector3New = Vector3.new
local CFrameNew = CFrame.new

--// Services

local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")

--// Tables

local Tabs = {
    AimbotTab = Window:AddTab('Aimbot'),
    VisualsTab = Window:AddTab('Visuals'),
    MiscTab = Window:AddTab('Misc'),
    Settings = Window:AddTab('Settings'),
}

local Sections = {

    --// Aimbot Tab

    Aimbot = Tabs.AimbotTab:AddLeftGroupbox('Aimbot'),
    AimbotSettings = Tabs.AimbotTab:AddRightGroupbox('Aimbot Settings'),
    
    --// Visuals Tab

    Visuals = Tabs.VisualsTab:AddLeftGroupbox('Visuals'),
    VisualSettings = Tabs.VisualsTab:AddRightGroupbox('Configuration'),

    Grenade = Tabs.VisualsTab:AddLeftGroupbox('Grenades'),
    Lighting = Tabs.VisualsTab:AddRightGroupbox('Lighting'),
    Misc = Tabs.MiscTab:AddLeftGroupbox('Misc'),
    Player = Tabs.MiscTab:AddLeftGroupbox('Player'),
}

local FeatureTable = {
    Combat = {
        SilentAim = {Enabled = false, Hitchance = 100, DummyRange = 0, DynamicFOV = false},
        WallCheck = false,
        TeamCheck = false,
        Hitpart = "Head", --// 6 = Torso, 7 = Head
    },
    Visuals = {

        --// Features \\--

        Box = {Enabled = false, Color = Color3.fromRGB(255, 255, 255)},
        Box3D = {Enabled = false, Color = Color3.fromRGB(255, 255, 255), Method = "Flat"},
        Tracers = {Enabled = false, Color = Color3.fromRGB(255, 255, 255), Origin = "Middle", End = "Head"}, --// 7 = head, 6 = torso (index)
        Chams = {Enabled = false, FillColor = Color3.fromRGB(255, 255, 255), OutlineColor = Color3.fromRGB(255, 255, 255), VisibleOnly = false, FillTransparency = 0, OutlineTransparency = 0},
        Dynamic = true,
        TeamCheck = false,
        UseTeamColor = false, --// Team colors dont apply to chams btw

        --// Other \\--

        Lighting = {
            OverrideAmbient = {Enabled = false, Color = Color3.fromRGB(255, 255, 255)},
        },

        Grenade = {
            GrenadeESP = {Enabled = false, Color = Color3.fromRGB(255, 255, 255), Transparency = 0},
            TrailModifier = {Enabled = false, Color = Color3.fromRGB(255, 255, 255), TrailLifetime = 0.55},
        }

    },
    Misc = {
        Player = {
            Fly = {Enabled = false, Speed = 0},
            Bhop = false,
            JumpPowerModifier = {Enabled = false, Power = 50},
            HipHeight = 0,
        }
    },
}

local Storage = {
    Identifiers = {
        Head = Vector3.new(1,1,1),
        Torso = Vector3.new(2,2,1),
    },
    BoxIndex = {
        {1, 2}, {2, 3}, {3, 4}, {4, 1},
        {5, 6}, {6, 7}, {7, 8}, {8, 5},
        {1, 5}, {2, 6}, {3, 7}, {4, 8} 
    },
    ESP = {
        Boxes = {},
        Box3D = {},
        Tracers = {},
        Chams = {},
    },
    Other = {
        ViewportSize = Camera.ViewportSize,
        ClosestPlayer = nil,
    },
}

local Functions = {
    Normal = {},
    ESP = {},
}

--// Objects

local FOVCircle = Drawing.new("Circle")
do --// Drawing object properties

    do --// Circle

        FOVCircle.Transparency = 1
        FOVCircle.Visible = false
        FOVCircle.Color = Color3.fromRGB(255, 255, 255)
        FOVCircle.Radius = 0
        
    end
    
end

local Watermark = Instance.new("ScreenGui", game.CoreGui)
do --// Properties & Rest

    local Main = Instance.new("Frame", Watermark)
    local UICorner = Instance.new("UICorner", Main)
    local Gradient = Instance.new("Frame", Main)
    local UIGradient = Instance.new("UIGradient", Gradient)
    local TextLabel = Instance.new("TextLabel", Main)
    
    do --// Properties
        Watermark.Enabled = false
        Watermark.Name = "Watermark"
    
        Main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Main.BorderSizePixel = 0
        Main.Position = UDim2.new(0.00550314458, 0, 0.00746268639, 0)
        Main.Size = UDim2.new(0.245283023, 0, 0.043532338, 0)
        
        UICorner.CornerRadius = UDim.new(0, 2)
        
        Gradient.Name = "Gradient"
        Gradient.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Gradient.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Gradient.BorderSizePixel = 0
        Gradient.Size = UDim2.new(1, 0, 0.0857142881, 0)
        
        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(43, 255, 114)), ColorSequenceKeypoint.new(0.38, Color3.fromRGB(255, 112, 150)), ColorSequenceKeypoint.new(0.51, Color3.fromRGB(85, 170, 255)), ColorSequenceKeypoint.new(0.71, Color3.fromRGB(85, 36, 255)), ColorSequenceKeypoint.new(0.77, Color3.fromRGB(85, 0, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 139, 44))}
        UIGradient.Parent = Gradient
        
        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.BackgroundTransparency = 1.000
        TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel.BorderSizePixel = 0
        TextLabel.Position = UDim2.new(0, 0, 0.0857142881, 0)
        TextLabel.Size = UDim2.new(1, 0, 0.914285719, 0)
        TextLabel.Font = Enum.Font.RobotoMono
        TextLabel.Text = "homohack | made by @dementia enjoyer"
        TextLabel.TextColor3 = Color3.fromRGB(247, 247, 247)
        TextLabel.TextSize = 12.000
        TextLabel.TextWrapped = true
        TextLabel.TextScaled = true
    end
end

--// Rest

do --// Main
    Library:Notify("I am aware of the optimization issues, they will be fixed in the near future", 5)

    do --// Elements

        do --// Aimbot Tab

            Sections.Aimbot:AddToggle('SilentAim', {
                Text = 'Silent Aim',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Combat.SilentAim.Enabled = Value
                end
            })

            Sections.Aimbot:AddToggle('VisualiseRange', {
                Text = 'Visualise Range',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FOVCircle.Visible = Value
                end
            }):AddColorPicker('VisualiseRangeColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Range Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FOVCircle.Color = Value
                end
            })

            Sections.Aimbot:AddToggle('DynamicRange', {
                Text = 'Dynamic Range',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Combat.SilentAim.DynamicFOV = Value
                end
            })
            Sections.Aimbot:AddSlider('AimbotRange', {
                Text = 'Range',
                Default = 0,
                Min = 0,
                Max = 1000,
                Rounding = 1,
                Compact = false,

                Callback = function(Value)
                    FeatureTable.Combat.SilentAim.DummyRange = Value --// im not gonna use flags, but feel free to switch to it :D
                end
            })

            Sections.Aimbot:AddDropdown('Aimpart', {
                Values = { 'Head', 'Torso', 'Random' },
                Default = 1,
                Multi = false,
            
                Text = 'Aim Part',
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Combat.Hitpart = Value
                end
            })

            --// Aimbot Settings

            Sections.AimbotSettings:AddToggle('WallCheck', {
                Text = 'Wall Check',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Combat.WallCheck = Value
                end
            })

            Sections.AimbotSettings:AddToggle('TeamCheck', {
                Text = 'Team Check',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Combat.TeamCheck = Value
                end
            })

            Sections.AimbotSettings:AddSlider('Hitchance', {
                Text = 'Hitchance',
                Default = 100,
                Min = 0,
                Max = 100,
                Rounding = 1,
                Compact = false,
            
                Callback = function(Value)
                    FeatureTable.Combat.SilentAim.Hitchance = Value
                end
            })
    
        end

        do --// Visuals Tab

            Sections.Visuals:AddToggle('Box', {
                Text = 'Box',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Box.Enabled = Value
                end
            }):AddColorPicker('BoxColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Box Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Box.Color = Value
                end
            })

            Sections.Visuals:AddToggle('Box3D', {
                Text = '3D Box',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Box3D.Enabled = Value
                end
            }):AddColorPicker('Box3DColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Box 3D Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Box3D.Color = Value
                end
            })

            Sections.Visuals:AddToggle('Tracers', {
                Text = 'Tracers',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Tracers.Enabled = Value
                end
            }):AddColorPicker('TracerColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Tracer Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Tracers.Color = Value
                end
            })

            Sections.Visuals:AddToggle('Chams', {
                Text = 'Chams',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Chams.Enabled = Value
                end
            }):AddColorPicker('FillColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Fill Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Chams.FillColor = Value
                end
            }):AddColorPicker('OutlineColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Outline Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Chams.OutlineColor = Value
                end
            })

            --// Settings

            Sections.VisualSettings:AddToggle('ChamsVisOnly', {
                Text = 'Chams Visible Only',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Chams.VisibleOnly = Value
                end
            })

            Sections.VisualSettings:AddToggle('TeamCheck', {
                Text = 'Team Check',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.TeamCheck = Value
                end
            })

            Sections.VisualSettings:AddToggle('TeamColors', {
                Text = 'Use Team Colors',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.UseTeamColor = Value
                end
            })

            Sections.VisualSettings:AddSlider('ChamFillTransparency', {
                Text = 'Cham Fill Transparency',
                Default = 0,
                Min = 0,
                Max = 1,
                Rounding = 1,
                Compact = false,

                Callback = function(Value)
                    FeatureTable.Visuals.Chams.FillTransparency = Value
                end
            })

            Sections.VisualSettings:AddSlider('ChamOutlineTransparency', {
                Text = 'Cham Outline Transparency',
                Default = 0,
                Min = 0,
                Max = 1,
                Rounding = 1,
                Compact = false,

                Callback = function(Value)
                    FeatureTable.Visuals.Chams.OutlineTransparency = Value
                end
            })

            Sections.VisualSettings:AddDropdown('Box3DSize', {
                Values = { 'Flat', 'Full' },
                Default = 1,
                Multi = false,
            
                Text = 'Box 3D Size',
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Box3D.Method = Value
                end
            })

            Sections.VisualSettings:AddDropdown('TracerOrigin', {
                Values = { 'Top', 'Middle', 'Bottom', 'Gun' },
                Default = 2,
                Multi = false,
            
                Text = 'Tracer Origin',
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Tracers.Origin = Value
                end
            })

            Sections.VisualSettings:AddDropdown('TracerEnd', {
                Values = { 'Head', 'Torso' },
                Default = 1,
                Multi = false,
            
                Text = 'Tracer End',
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Tracers.End = Value
                end
            })

            --// Lighting Section

            Sections.Lighting:AddToggle('OverrideAmbient', {
                Text = 'Override Ambient',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Lighting.OverrideAmbient.Enabled = Value
                end
            }):AddColorPicker('AmbientColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Ambient Color',
                Transparency = 0,
            
                Callback = function(Value)
                    if FeatureTable.Visuals.Lighting.OverrideAmbient.Enabled then
                        FeatureTable.Visuals.Lighting.OverrideAmbient.Color = Value
    
                        do --// Properties
                            
                            Functions.Normal:SetAmbient("Ambient", Value)
                            Functions.Normal:SetAmbient("OutdoorAmbient", Value)
                            Functions.Normal:SetAmbient("ColorShift_Top", Value)
                            Functions.Normal:SetAmbient("ColorShift_Bottom", Value)
                            
                        end
                    end
                end
            })

            --// Grenade Section

            Sections.Grenade:AddToggle('Grenade', {
                Text = 'Grenade ESP',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Grenade.GrenadeESP.Enabled = Value
                end
            }):AddColorPicker('GrenadeColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Grenade Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Grenade.GrenadeESP.Color = Value
                end
            })

            Sections.Grenade:AddToggle('TrailModifier', {
                Text = 'Trail Modifier',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Grenade.TrailModifier.Enabled = Value
                end
            }):AddColorPicker('TrailColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Trail Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Grenade.TrailModifier.Color = Value
                end
            })

            Sections.Grenade:AddSlider('TrailLifetime', {
                Text = 'Trail Lifetime',
                Default = 0.55,
                Min = 0,
                Max = 10,
                Rounding = 1,
                Compact = false,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Grenade.TrailModifier.TrailLifetime = Value
                end
            })

        end

        do --// Misc Tab

            Sections.Misc:AddToggle('Watermark', {
                Text = 'Watermark',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    Watermark.Enabled = Value
                end
            })

            --// Player section

            Sections.Player:AddToggle('Fly', {
                Text = 'Fly',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.Fly.Enabled = Value
                end
            })

            Sections.Player:AddToggle('Bhop', {
                Text = 'Bhop',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.Bhop = Value
                end
            })

            Sections.Player:AddToggle('JumpModifier', {
                Text = 'Override Jump Power',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.JumpPowerModifier.Enabled = Value
                end
            })

            Sections.Player:AddSlider('JumpPower', {
                Text = 'Jump Power',
                Default = 0,
                Min = 0,
                Max = 80,
                Rounding = 1,
                Compact = false,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.JumpPowerModifier.Power = Value
                end
            })

            Sections.Player:AddSlider('HipHeight', {
                Text = 'Hip Height',
                Default = 0,
                Min = 0,
                Max = 50,
                Rounding = 1,
                Compact = false,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.HipHeight = Value
                end
            })

            Sections.Player:AddSlider('FlySpeed', {
                Text = 'Fly Speed',
                Default = 0,
                Min = 0,
                Max = 50,
                Rounding = 1,
                Compact = false,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.Fly.Speed = Value
                end
            })

        end
        
    end
    
    do --// Logic

        do --// Functions

            do --// Regular

                do --// Lighting

                    function Functions.Normal:SetAmbient(Property, Value)
                        if FeatureTable.Visuals.Lighting.OverrideAmbient.Enabled then
                            Lighting[Property] = Value
                        end
                    end
                    
                end

                do --// Players

                    function Functions.Normal:GetTeam(Player)
                        if Player ~= nil and Player.Parent ~= nil and Player:FindFirstChildOfClass("Folder") then
                            local Helmet = Player:FindFirstChildWhichIsA("Folder"):FindFirstChildOfClass("MeshPart")
                            if Helmet then
                                if Helmet.BrickColor == BrickColor.new("Black") then
                                    return game.Teams.Phantoms
                                end
                                return game.Teams.Ghosts
                            end
                        end
                    end
                    function Functions.Normal:GetPlayerBodyparts(Player)
                        local Head
                        local Torso
                        local Children = Player:GetChildren()
                        local HeadSize = Storage.Identifiers.Head
                        local TorsoSize = Storage.Identifiers.Torso
                    
                        for i = 1, #Children do
                            local Child = Children[i]
                            if Child:IsA("BasePart") then
                                if Child.Size == HeadSize then
                                    Head = Child
                                elseif Child.Size == TorsoSize then
                                    Torso = Child
                                end
                            end
                        end
                    
                        return { Head = Head, Torso = Torso }
                    end                                      

                    function Functions.Normal:GetPlayers()
                        local PlayerList = {}
                        for i,Teams in Players:GetChildren() do
                            for i,Players in Teams:GetChildren() do
                                table.insert(PlayerList, Players)
                            end
                        end
                        return PlayerList
                    end
                    
                end
                
                do --// LocalPlayer
                    function Functions.Normal:GetGun()
                        for i,Viewmodel in Camera:GetChildren() do
                            if Viewmodel:IsA("Model") and not Viewmodel.Name:find("Arm") then
                                return Viewmodel
                            end
                        end
                        return nil
                    end
                end

                do --// Math

                    function Functions.Normal:Measure(Origin, End)
                        return (Origin - End).Magnitude
                    end

                    function Functions.Normal:GetLength(Table) --// This isnt even math btw, but its not related to any of the other sections so whatever lol
                        local Int = 0
                        for WhatTheSigma in Table do
                            Int += 1
                        end
                        return Int
                    end

                end
    
            end
    
            do --// Aimbot
                
                function Functions.Normal:getClosestPlayer()
                    local Player = nil
                    local Hitpart = nil
                    local Distance = math.huge
                
                    for i, Players in Functions.Normal:GetPlayers() do
                        if Players ~= nil then
                            local Bodyparts = Functions.Normal:GetPlayerBodyparts(Players)

                            local Screen = Camera:WorldToViewportPoint(Bodyparts.Torso.Position)
                            local MeasureDistance = (Vector2.new(Storage.Other.ViewportSize.X / 2, Storage.Other.ViewportSize.Y / 2) - Vector2.new(Screen.X, Screen.Y)).Magnitude
                
                            local PlayerIsVisible = (not FeatureTable.Combat.WallCheck) or Functions.Normal:PlayerVisible(Players, Camera.CFrame.Position, Bodyparts.Torso.Position, {Misc, Ignore, Players:FindFirstChildOfClass("Folder")})
                
                            if MeasureDistance < Distance and MeasureDistance <= FOVCircle.Radius * 1.25 and PlayerIsVisible then
                                Player = Players
                                Distance = MeasureDistance
                
                                if tostring(FeatureTable.Combat.Hitpart):find("Random") then
                                    print("Random")
                                    local Keys = {}
                
                                    do --// WhatTheSigma
                                        for WhatTheSigma in Storage.Identifiers do
                                            table.insert(Keys, WhatTheSigma)
                                        end
                                    end
                
                                    local Index = math.random(1, Functions.Normal:GetLength(Keys))
                                    local Rndm = Keys[Index]
                                    if Rndm ~= "Random" then
                                        Hitpart = Bodyparts[Rndm]
                                    end
                                else
                                    Hitpart = Bodyparts[FeatureTable.Combat.Hitpart]
                                end
                            end
                        end
                    end
                
                    return {Closest = Player, Hitpart = Hitpart}
                end

                function Functions.Normal:PlayerVisible(Player, Origin, End, Ignorelist)

                    local Params = RaycastParams.new()
                    do --// Param Properties

                        Params.FilterDescendantsInstances = Ignorelist
                        Params.FilterType = Enum.RaycastFilterType.Exclude
                        Params.IgnoreWater = true
                        
                    end

                    local CastRay = workspace:Raycast(Origin, End - Origin, Params)
                    if CastRay and CastRay.Instance then
                        if CastRay.Instance:IsDescendantOf(Player) then
                            return true
                        end
                    end
                    return false
        
                end
    
            end
    
            do --// ESP
                function Functions.ESP:Create(Player)
        
                    if FeatureTable.Visuals.Box.Enabled then

                        if not table.find(Storage.ESP.Boxes, Player) then
        
                            local Box = Drawing.new("Square")
                            Box.Color = Color3.fromRGB(255,255,255)
                            Box.Transparency = 1
                            Box.Visible = true
                            Box.Thickness = 1
                            Box.ZIndex = 2
                            
                            do --// Table insert
            
                                table.insert(Storage.ESP.Boxes, Box)
                                table.insert(Storage.ESP.Boxes, Player)
            
                            end
                    
                        end

                    end
                    if FeatureTable.Visuals.Tracers.Enabled then

                        if not table.find(Storage.ESP.Tracers, Player) then
        
                            local Tracer = Drawing.new("Line")
                            Tracer.Transparency = 1
                            Tracer.Visible = true
                            Tracer.Color = Color3.fromRGB(255,255,255)
                            
                            do --// Table insert
            
                                table.insert(Storage.ESP.Tracers, Tracer)
                                table.insert(Storage.ESP.Tracers, Player)
            
                            end
                    
                        end
                        
                    end
                    if FeatureTable.Visuals.Box3D.Enabled then
                        if not table.find(Storage.ESP.Box3D, Player) then
                            local Lines = {}
                            
                            for i = 1, 12 do
                                local Line = Drawing.new("Line")
                                Line.Transparency = 1
                                Line.Color = Color3.fromRGB(255, 255, 255)
                                Line.Visible = false
                                table.insert(Lines, Line)
                            end
                    
                            do --// Table insert
                                table.insert(Storage.ESP.Box3D, Lines)
                                table.insert(Storage.ESP.Box3D, Player)
                            end
                        end
                    end
        
                end
    
                function Functions.ESP:ClearTable(esps, esptable, index)
                    for i = 1, #esps do
                        esps[i]:Destroy()
                    end
                    do --// Table clear
                        table.remove(esptable, index)
                        table.remove(esptable, index-1)
                    end
                end

            end
    
        end
    
        do --// Loops
    
            task.spawn(function()
                while task.wait() do --// gl working with the dogshit code, skids :D
    
                    do --// Combat
    
                        do --// Aimbot
    
                            if FeatureTable.Combat.SilentAim.Enabled then

                                local Enemy = Storage.Other.ClosestPlayer
                                local Target = Enemy.Closest
                                if Target ~= nil and (FeatureTable.Combat.TeamCheck and Functions.Normal:GetTeam(Target) ~= game.Players.LocalPlayer.Team or not FeatureTable.Combat.TeamCheck) then

                                    local Hitpart = Enemy.Hitpart
                                    local Gun = Functions.Normal:GetGun()

                                    if Hitpart and Gun then
                                        for i, GunParts in Gun:GetChildren() do
                                            pcall(function()
                                                local Joints = GunParts:GetJoints()
                                                if GunParts.Name:find("SightMark") or GunParts.Name:find("FlameSUP") or GunParts.Name:find("Flame") then
                                                    local Vector = Vector3New()
                                    
                                                    do --// Hitchance

                                                        local Chance = FeatureTable.Combat.SilentAim.Hitchance
                                                        if Chance < 100 then --// Pretty awful but it works
                                                            local MissChance = (100 - Chance) / 100
                                                            local x = math.random() * 3 - 1
                                                            local y = math.random() * 3 - 1
                                                            local z = math.random() * 3 - 1 
                                                            Vector = Vector3New(x, y, z) * MissChance
                                                        end

                                                    end
                                    
                                                    Joints[1].C0 = Joints[1].Part0.CFrame:ToObjectSpace(CFrame.lookAt(Joints[1].Part1.Position, (Hitpart.Position + Vector)))
                                                end
                                            end)
                                        end
                                    end

                                end

                            end
                            
    
                        end
    
                    end
    
                    do --// Visuals

                        for i,Players in Functions.Normal:GetPlayers() do --// bro... so p1000
                            Functions.ESP:Create(Players)
                        end
    
                        do --// Box ESP
    
                            for i,Player in Storage.ESP.Boxes do --// Box logic (obviously)
                                if typeof(Player) == "Instance" then
    
                                    local Box = Storage.ESP.Boxes[i-1]
                    
                                    if FeatureTable.Visuals.Box.Enabled and Player:IsDescendantOf(workspace) and not tostring(Player:GetFullName()):find(tostring(DeadBodies)) then
                                        local Bodyparts = Functions.Normal:GetPlayerBodyparts(Player)
                                        local Torso = Bodyparts.Torso
                                        if Torso ~= nil then
                                            local Position, OnScreen = Camera:WorldToViewportPoint(Torso.Position) --// Convert to screen pos since we're rendering the boxes on the screen (duh)
    
                                            local Team = Functions.Normal:GetTeam(Player)
                                            local TeamColor = Team.TeamColor
                    
                                            if OnScreen and FeatureTable.Visuals.TeamCheck and tostring(Team) ~= game.Players.LocalPlayer.Team.Name or not FeatureTable.Visuals.TeamCheck then
                    
                                                local PosX = Position.X - (Box.Size.X / 2)
                                                local PosY = Position.Y - (Box.Size.Y / 2)
                                                local Scale = 1000/(Camera.CFrame.Position - Torso.Position).Magnitude*80/Camera.FieldOfView --// Very simple box distance scale
                                                
                                                Box.Position = Vector2.new(PosX, PosY)
                                                Box.Size = Vector2.new(2 * Scale, 3 * Scale)
                                                Box.Visible = true

                                                if FeatureTable.Visuals.UseTeamColor then --// 😭
                                                    if tostring(TeamColor) == "Bright blue" then
                                                        Box.Color = Color3.fromRGB(0, 162, 255)
                                                    elseif tostring(TeamColor) == "Bright orange" then
                                                        Box.Color = Color3.fromRGB(255, 162, 0)
                                                    end
                                                else
                                                    Box.Color = FeatureTable.Visuals.Box.Color
                                                end
                    
                                            else
                    
                                                Functions.ESP:ClearTable({Box}, Storage.ESP.Boxes, i)
                    
                                            end
                    
                                        else
                    
                                            Functions.ESP:ClearTable({Box}, Storage.ESP.Boxes, i)
                    
                                        end
                                    else
                    
                                        Functions.ESP:ClearTable({Box}, Storage.ESP.Boxes, i)
                    
                                    end
                                end
                            end

                        end

                        do --// 3D Box
                            for i, Player in Storage.ESP.Box3D do
                                if typeof(Player) == "Instance" then
                                    local Objects = Storage.ESP.Box3D[i-1]
                                    
                                    if Objects then
                                        if FeatureTable.Visuals.Box3D.Enabled then
                                            local Bodyparts = Functions.Normal:GetPlayerBodyparts(Player)
                                            local Torso = Bodyparts.Torso
                                            local Team = Functions.Normal:GetTeam(Player)
                                            
                                            if Player and Torso and not tostring(Player:GetFullName()):find(tostring(DeadBodies)) and Team and Team.TeamColor then
                                                local a, Visible = Camera:WorldToViewportPoint(Torso.Position)
                                                local TeamColor = Team.TeamColor
                                                local Size = Vector3.new(2, 3, 1.5)
                                                local Corners = {
                                                    Torso.CFrame * CFrameNew(-Size.X, Size.Y, -Size.Z),
                                                    Torso.CFrame * CFrameNew(Size.X, Size.Y, -Size.Z),
                                                    Torso.CFrame * CFrameNew(Size.X, -Size.Y, -Size.Z),
                                                    Torso.CFrame * CFrameNew(-Size.X, -Size.Y, -Size.Z),
                                                    Torso.CFrame * CFrameNew(-Size.X, Size.Y, Size.Z),
                                                    Torso.CFrame * CFrameNew(Size.X, Size.Y, Size.Z),
                                                    Torso.CFrame * CFrameNew(Size.X, -Size.Y, Size.Z),
                                                    Torso.CFrame * CFrameNew(-Size.X, -Size.Y, Size.Z)
                                                }
                                                
                                                if FeatureTable.Visuals.TeamCheck and tostring(Team) ~= game.Players.LocalPlayer.Team.Name or not FeatureTable.Visuals.TeamCheck then
                                                    if FeatureTable.Visuals.Box3D.Method == "Flat" then
                                                        for iA = 1, 4 do
                                                            local Line = Objects[iA]
                                                            Line.Visible = Visible
                                                            if Visible then
                                                                local Next = (iA % 4) + 1
                                                                local ScreenPos1 = Camera:WorldToViewportPoint(Corners[iA].Position)
                                                                local ScreenPos2 = Camera:WorldToViewportPoint(Corners[Next].Position)
                                                                
                                                                Line.From = Vector2.new(ScreenPos1.X, ScreenPos1.Y)
                                                                Line.To = Vector2.new(ScreenPos2.X, ScreenPos2.Y)
                                                                
                                                                if FeatureTable.Visuals.UseTeamColor then
                                                                    if tostring(TeamColor) == "Bright blue" then
                                                                        Line.Color = Color3.fromRGB(0, 162, 255)
                                                                    elseif tostring(TeamColor) == "Bright orange" then
                                                                        Line.Color = Color3.fromRGB(255, 162, 0)
                                                                    end
                                                                else
                                                                    Line.Color = FeatureTable.Visuals.Box3D.Color
                                                                end
                                                            end
                                                        end
                                                    else
                                                        for iB = 1, 12 do
                                                            local Line = Objects[iB]
                                                            Line.Visible = Visible
                                                            
                                                            if Visible then
                                                                local b = Storage.BoxIndex[iB]
                                                                local c = Camera:WorldToViewportPoint(Corners[b[1]].Position)
                                                                local d = Camera:WorldToViewportPoint(Corners[b[2]].Position)
                                                                
                                                                Line.From = Vector2.new(c.X, c.Y)
                                                                Line.To = Vector2.new(d.X, d.Y)
                                                                
                                                                if FeatureTable.Visuals.UseTeamColor then
                                                                    if tostring(TeamColor) == "Bright blue" then
                                                                        Line.Color = Color3.fromRGB(0, 162, 255)
                                                                    elseif tostring(TeamColor) == "Bright orange" then
                                                                        Line.Color = Color3.fromRGB(255, 162, 0)
                                                                    end
                                                                else
                                                                    Line.Color = FeatureTable.Visuals.Box3D.Color
                                                                end
                                                            end
                                                        end
                                                    end
                                                else
                                                    Functions.ESP:ClearTable(Objects, Storage.ESP.Box3D, i)
                                                end
                                            else
                                                Functions.ESP:ClearTable(Objects, Storage.ESP.Box3D, i)
                                            end
                                        else
                                            Functions.ESP:ClearTable(Objects, Storage.ESP.Box3D, i)
                                        end
                                    end
                                end
                            end
                        end
                        do --// Tracer ESP

                            for i,Player in Storage.ESP.Tracers do --// Tracer logic (obviously once again)
                                if typeof(Player) == "Instance" then
    
                                    local Tracer = Storage.ESP.Tracers[i-1]
                    
                                    if FeatureTable.Visuals.Tracers.Enabled and Player:IsDescendantOf(workspace) then
                                        local Bodyparts = Functions.Normal:GetPlayerBodyparts(Player)
                                        local Target = Bodyparts[FeatureTable.Visuals.Tracers.End]
                                        if Target ~= nil and not tostring(Player:GetFullName()):find(tostring(DeadBodies)) then
                                            local Position, OnScreen = Camera:WorldToViewportPoint(Target.Position) --// Convert to screen pos since we're rendering the boxes on the screen (duh)
    
                                            local Team = Functions.Normal:GetTeam(Player)
                                            local TeamColor = Team.TeamColor
                    
                                            if OnScreen and FeatureTable.Visuals.TeamCheck and tostring(Team) ~= game.Players.LocalPlayer.Team.Name or not FeatureTable.Visuals.TeamCheck then
                                                
                                                local Origin = FeatureTable.Visuals.Tracers.Origin
                                                local Value
                                                if Origin ~= "Gun" then

                                                    if Origin == "Top" then
                                                        Value = 0 
                                                    elseif Origin == "Middle" then
                                                        Value = Storage.Other.ViewportSize.Y / 2
                                                    elseif Origin == "Bottom" then
                                                        Value = Storage.Other.ViewportSize.Y
                                                    end

                                                    Tracer.From = Vector2.new(Storage.Other.ViewportSize.X / 2, Value)
                                                    Tracer.To = Vector2.new(Position.X, Position.Y)

                                                else

                                                    local Gun = Functions.Normal:GetGun()
                                                    if Gun ~= nil and Gun:FindFirstChild("Flame") then
                                                        local TipPosition = Camera:WorldToViewportPoint(Gun["Flame"].Position) or Camera:WorldToViewportPoint(Gun["FlameSUP"].Position)
                                                        Tracer.From = Vector2.new(TipPosition.X, TipPosition.Y)
                                                        Tracer.To = Vector2.new(Position.X, Position.Y)
                                                    else
                                                        Functions.ESP:ClearTable({Tracer}, Storage.ESP.Tracers, i)
                                                    end

                                                end

                                                if FeatureTable.Visuals.UseTeamColor then
                                                    if tostring(TeamColor) == "Bright blue" then
                                                        Tracer.Color = Color3.fromRGB(0, 162, 255)
                                                    elseif tostring(TeamColor) == "Bright orange" then
                                                        Tracer.Color = Color3.fromRGB(255, 162, 0)
                                                    end
                                                else
                                                    Tracer.Color = FeatureTable.Visuals.Tracers.Color
                                                end
                    
                                            else
                    
                                                Functions.ESP:ClearTable({Tracer}, Storage.ESP.Tracers, i)
                    
                                            end
                    
                                        else
                    
                                            Functions.ESP:ClearTable({Tracer}, Storage.ESP.Tracers, i)
                    
                                        end
                                    else
                    
                                        Functions.ESP:ClearTable({Tracer}, Storage.ESP.Tracers, i)
                    
                                    end
                                end
                            end
                            
                        end

                        do --// Cham ESP

                            for i, Player in Functions.Normal:GetPlayers() do
                                if Player ~= nil then
                                    
                                    local Highlight = Player:FindFirstChildOfClass("Highlight")
                                    local Team = Functions.Normal:GetTeam(Player)
                                    local TeamColor = Team.TeamColor
                            
                                    if not tostring(Player:GetFullName()):find(tostring(DeadBodies)) and FeatureTable.Visuals.Chams.Enabled and (FeatureTable.Visuals.TeamCheck and tostring(Team) ~= game.Players.LocalPlayer.Team.Name or not FeatureTable.Visuals.TeamCheck) then
                                        
                                        if not Highlight then
                                            Highlight = Instance.new("Highlight", Player)
                                        end
                            
                                        Highlight.Enabled = true
                                        Highlight.Adornee = Player
                                        Highlight.FillColor = FeatureTable.Visuals.Chams.FillColor
                                        Highlight.OutlineColor = FeatureTable.Visuals.Chams.OutlineColor
                                        Highlight.FillTransparency = FeatureTable.Visuals.Chams.FillTransparency
                                        Highlight.OutlineTransparency = FeatureTable.Visuals.Chams.OutlineTransparency
                                        Highlight.DepthMode = FeatureTable.Visuals.Chams.VisibleOnly and Enum.HighlightDepthMode.Occluded or Enum.HighlightDepthMode.AlwaysOnTop

                                        if FeatureTable.Visuals.UseTeamColor then --// 😭
                                            if tostring(TeamColor) == "Bright blue" then
                                                Highlight.FillColor = Color3.fromRGB(0, 162, 255)
                                                Highlight.OutlineColor = Color3.fromRGB(0, 162, 255)
                                            elseif tostring(TeamColor) == "Bright orange" then
                                                Highlight.FillColor = Color3.fromRGB(255, 162, 0)
                                                Highlight.OutlineColor = Color3.fromRGB(255, 162, 0)
                                            end
                                        else
                                            Highlight.FillColor = FeatureTable.Visuals.Chams.FillColor
                                            Highlight.OutlineColor = FeatureTable.Visuals.Chams.OutlineColor
                                        end
                  
                                    else

                                        if Highlight then
                                            Highlight:Destroy()
                                        end

                                    end
									
                                end
                            end
                            
                        end
    
                    end

                    do --// Misc

                        do --// Player

                            local LocalPlayer = Ignore:FindFirstChild("RefPlayer")
                            if LocalPlayer then
                                local Humanoid = LocalPlayer:FindFirstChildOfClass("Humanoid")

                                do --// Player Modifications

                                    if Humanoid then
    
                                        if FeatureTable.Misc.Player.JumpPowerModifier.Enabled then
                                            Humanoid.JumpPower = FeatureTable.Misc.Player.JumpPowerModifier.Power
                                        end
                                        if FeatureTable.Misc.Player.Fly.Enabled then

                                            local Direction = Vector3New()

                                            if LocalPlayer then

                                                local LookVector = Camera.CFrame.LookVector * Vector3New(1, 0, 1)
                                                local Directions = { --// Very optimized real!
                                                    [Enum.KeyCode.W] = LookVector,
                                                    [Enum.KeyCode.S] = -LookVector,
                                                    [Enum.KeyCode.D] = Vector3New(-LookVector.Z, 0, LookVector.X),
                                                    [Enum.KeyCode.A] = Vector3New(LookVector.Z, 0, -LookVector.X),
                                                    [Enum.KeyCode.Space] = Vector3New(0, 5 * 5, 0),
                                                    [Enum.KeyCode.LeftControl] = Vector3New(0, -5 * 5, 0)
                                                }
                                                
                                                for Key, Dir in Directions do
                                                    if UserInputService:IsKeyDown(Key) then
                                                        Direction = Direction + Dir
                                                    end
                                                end
                                                
                                                if Direction.Magnitude > 0 then
                                                    Direction = Direction.Unit
                                                    LocalPlayer.HumanoidRootPart.Velocity = Direction * FeatureTable.Misc.Player.Fly.Speed
                                                    LocalPlayer.HumanoidRootPart.Anchored = false
                                                else
                                                    LocalPlayer.HumanoidRootPart.Velocity = Vector3New()
                                                    LocalPlayer.HumanoidRootPart.Anchored = true
                                                end

                                            end

                                        end
                                        if UserInputService:IsKeyDown(Enum.KeyCode.Space) and FeatureTable.Misc.Player.Bhop then
                                            Humanoid.Jump = true
                                        end
                                        Humanoid.HipHeight = FeatureTable.Misc.Player.HipHeight
                                    
                                    end
                                    
                                end

                            end
                            
                        end
                        
                    end

                    do --// Extra

                        Storage.Other.ClosestPlayer = Functions.Normal:getClosestPlayer()
                        
                        do --// FOV Circle

                            local Dynamic = FeatureTable.Combat.SilentAim.DummyRange / math.tan(math.rad(Camera.FieldOfView / 2))
                            FOVCircle.Position = Vector2.new(Storage.Other.ViewportSize.X/2, Storage.Other.ViewportSize.Y/2)

                            if FeatureTable.Combat.SilentAim.DynamicFOV then
                                FOVCircle.Radius = Dynamic
                            else
                                FOVCircle.Radius = FeatureTable.Combat.SilentAim.DummyRange
                            end
                            
                        end

                    end
    
                end
            end)
    
        end
    
        do --// Connections
            
            Camera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
                Storage.Other.ViewportSize = Camera.ViewportSize
            end)

            do --// Lighting (I love this part)

                Lighting:GetPropertyChangedSignal("Ambient"):Connect(function()
                    Functions.Normal:SetAmbient("Ambient", FeatureTable.Visuals.Lighting.OverrideAmbient.Color)
                end)

                Lighting:GetPropertyChangedSignal("OutdoorAmbient"):Connect(function()
                    Functions.Normal:SetAmbient("OutdoorAmbient", FeatureTable.Visuals.Lighting.OverrideAmbient.Color)
                end)

                Lighting:GetPropertyChangedSignal("ColorShift_Top"):Connect(function()
                    Functions.Normal:SetAmbient("ColorShift_Top", FeatureTable.Visuals.Lighting.OverrideAmbient.Color)
                end)

                Lighting:GetPropertyChangedSignal("ColorShift_Bottom"):Connect(function()
                    Functions.Normal:SetAmbient("ColorShift_Bottom", FeatureTable.Visuals.Lighting.OverrideAmbient.Color)
                end)
                
            end

            Misc.ChildAdded:Connect(function(Child)
                if tostring(Child.Name):find("Trigger") then 
                    if FeatureTable.Visuals.Grenade.GrenadeESP.Enabled then
                        local Billboard = Instance.new("BillboardGui", Child)
                        local Frame = Instance.new("Frame", Billboard)
                        local UICorner = Instance.new("UICorner", Frame)
                        
                        do --// Properties
                            do --// BillboardGui
                                Billboard.Enabled = true
                                Billboard.AlwaysOnTop = true
                                Billboard.Size = UDim2.new(1, 0, 1, 0)
                                Billboard.Adornee = Child
                            end
                            do --// Frame
                                Frame.Size = UDim2.new(1, 0, 1, 0)
                                Frame.BackgroundTransparency = FeatureTable.Visuals.Grenade.GrenadeESP.Transparency
                                Frame.BackgroundColor3 = FeatureTable.Visuals.Grenade.GrenadeESP.Color
                            end
                            do --// UICorner
                                UICorner.CornerRadius = UDim.new(0, 50)
                            end
                        end
                    end
                    if FeatureTable.Visuals.Grenade.TrailModifier.Enabled then
                        local Trail = Child:WaitForChild("Trail")
                        Trail.Lifetime = FeatureTable.Visuals.Grenade.TrailModifier.TrailLifetime
                        Trail.Color = ColorSequence.new(FeatureTable.Visuals.Grenade.TrailModifier.Color)
                    end
                end
            end)
            
            
        end
    
        --// Made by @dementia enjoyer 😁
    
    end
    
end

Library:OnUnload(function()
    Library.Unloaded = true
end)

local MenuGroup = Tabs['Settings']:AddLeftGroupbox('Menu')
MenuGroup:AddButton('Unload', function() Library:Unload() end)

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })
ThemeManager:SetFolder('Homohack')
SaveManager:SetFolder('Homohack/PhantomForces')

SaveManager:BuildConfigSection(Tabs['Settings'])
ThemeManager:ApplyToTab(Tabs['Settings'])
SaveManager:LoadAutoloadConfig()
    end,
 })

 local Button = MainTab:CreateButton({
    Name = "Sigmanality",
    Callback = function()
        local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
        local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
        local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
        
        local Window = Fluent:CreateWindow({
            Title = "Criminality " .. Fluent.Version,
            SubTitle = "Sigma.",
            TabWidth = 160,
            Size = UDim2.fromOffset(580, 460),
            Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
            Theme = "Rose",
            MinimizeKey = Enum.KeyCode.LeftAlt-- Used when theres no MinimizeKeybind
        })
        
        --Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
        local Tabs = {
            Main = Window:AddTab({ Title = "Main", Icon = "" }),
            Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
        }
        
        local Options = Fluent.Options
        
        do
            Fluent:Notify({
                Title = "SIGMANALITY",
                Content = "sigma script",
                SubContent = "Ezz", -- Optional
                Duration = 5 -- Set to nil to make the notification not disappear
            })
        
            Tabs.Main:AddButton({
                Title = "ESP",
                Description = "Esp",
                Callback = function(esp)
                    loadstring(game:HttpGet('https://raw.githubusercontent.com/Lucasfin000/SpaceHub/main/UESP'))()
                end
            })
        
            local Toggle = Tabs.Main:AddToggle("Chams", {Title = "Chams", Default = false })
        
            Toggle:OnChanged(function(Value)
                _G.highlightEnabled = Value
            end)
        
        
            _G.highlightEnabled = false
        
            local function getRoleColor(plr)
                if (plr.Backpack:FindFirstChild("Knife") or plr.Character:FindFirstChild("Knife")) then
                    return Color3.new(1, 0, 0)
                elseif (plr.Backpack:FindFirstChild("Gun") or plr.Character:FindFirstChild("Gun")) then
                    return Color3.new(0, 0, 1)
                else
                    return Color3.new(186,85,211)
                end
            end
            
            local function handleHighlight()
                while true do
                    if _G.highlightEnabled then
                        for _, v in pairs(game.Players:GetChildren()) do
                            if v ~= game.Players.LocalPlayer and v.Character then
                                if not v.Character:FindFirstChild("Highlight") then
                                    local highlight = Instance.new("Highlight", v.Character)
                                    highlight.FillTransparency = 0.5
                                    highlight.OutlineTransparency = 0.5
                                    highlight.FillColor = getRoleColor(v)
                                else
                                    v.Character.Highlight.FillColor = getRoleColor(v)
                                end
                            end
                        end
                    else
                        for _, v in pairs(game.Players:GetChildren()) do
                            if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Highlight") then
                                v.Character.Highlight:Destroy()
                            end
                        end
                    end
                    wait(0.1)
                end
            end
            
            spawn(handleHighlight)
        
            local Camera = game.Workspace.CurrentCamera
        
            local Slider = Tabs.Main:AddSlider("Slider", {
                Title = "FOV changer",
                Description = "FOV",
                Default = 60,
                Min = 60,
                Max = 120,
                Rounding = 1,
                Callback = function(Value)
                    Camera.FieldOfView = Value
                end
            })
        
            Tabs.Main:AddButton({
                Title = "Glide Fly",
                Description = "Flight Bind: B - Fly/Speed; U - Only Speed",
                Callback = function(esp)
                    togglekey = "b"  -- fly toggle
        upkey = "="      -- makes speed faster
        downkey = "-"    -- makes speed slower
        enablepart = "u" -- enables part fly
        speed = -0.5     -- changes set speed
        updown = false   -- true if you want to go up
        notify = true    -- true if you want notifcations
        flypart = true   -- true for part fly
        local user = game:GetService("UserInputService")
        local player = game:GetService("Players").LocalPlayer
        local GuiService = game:GetService("StarterGui")
        local mouse = game.Players.LocalPlayer:GetMouse()
        local holdingWKey = false
        local holdingSKey = false
        local holdingAKey = false
        local holdingDKey = false
        local holdingSpaceKey = false
        local holdingShiftKey = false
        local check = false
        GuiService:SetCore("SendNotification", {Title = "Speed", Text = "Script made by Zurewrath";})
        mouse.KeyDown:connect(function(key)
           if key == enablepart then
               if flypart then
                   flypart = false
                   if notify then
                       GuiService:SetCore("SendNotification", {Title = "Speed", Text = "Disabled part fly";})
                   end
               else
                   flypart = true
                   if notify then
                       GuiService:SetCore("SendNotification", {Title = "Speed", Text = "Enabled part fly";})
                   end
               end
           end
        end)
        mouse.KeyDown:connect(function(key)
           if key == upkey then
               speed = speed + -0.1
               if notify then
                   GuiService:SetCore("SendNotification", {Title = "Speed", Text = "Speed is now set to " .. speed;})
               end
           end
        end)
        mouse.KeyDown:connect(function(key)
           if key == downkey then
               speed = speed - -0.1
               if notify then
                   GuiService:SetCore("SendNotification", {Title = "Speed", Text = "Speed is now set to " .. speed;})
               end
           end
        end)
        mouse.KeyDown:connect(function(key)
           if key == togglekey then
               if check  == true then
                   check = false
                   if notify then
                       GuiService:SetCore("SendNotification", {Title = "Speed", Text = "Speed is now disabled";})
                   end
                   game.Workspace.fly:Destroy()
               else
                   check = true
                   if notify then
                       GuiService:SetCore("SendNotification", {Title = "Speed", Text = "Speed is now enabled";})
                   end
                   if flypart then
                       local brick = Instance.new("Part", workspace)
                       brick.Size = Vector3.new(8, 2, 8)
                       brick.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)
                       brick.Transparency = 1 brick.Anchored = true brick.Name = "fly"
                       game:GetService('RunService').Stepped:connect(function()
                           brick.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)
                           brick.Size = Vector3.new(8+-speed, 2, 8+-speed)
                       end)
                   end
               end
           end
        end)
        game:GetService('RunService').Stepped:connect(function()
           if check then
               if holdingWKey == true then
                 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,speed)
               end
               if holdingSKey == true then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-speed)
           end
               if holdingAKey == true then
           game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(speed,0,0)
           end
               if holdingDKey == true then
           game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(-speed,0,0)
               end
               if holdingShiftKey == true then
                   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,speed,0)
               end
               if updown then
                   if holdingSpaceKey == true then
                       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-speed,0)
                   end
               end
           end
        end)
        user.InputBegan:Connect(function(inputObject)
           if (inputObject.KeyCode == Enum.KeyCode.W) then
               holdingWKey = true
           end
           if (inputObject.KeyCode == Enum.KeyCode.S) then
               holdingSKey = true
           end
           if (inputObject.KeyCode == Enum.KeyCode.A) then
               holdingAKey = true
           end
           if (inputObject.KeyCode == Enum.KeyCode.D) then
               holdingDKey = true
           end
           if (inputObject.KeyCode == Enum.KeyCode.LeftControl) then
               holdingShiftKey = true
           end
           if (inputObject.KeyCode == Enum.KeyCode.Space) then
               holdingSpaceKey = true
           end
        end)
        user.InputEnded:Connect(function(inputObject)
           if (inputObject.KeyCode == Enum.KeyCode.W) then
               holdingWKey = false
           end
           if( inputObject.KeyCode == Enum.KeyCode.S) then
               holdingSKey = false
           end
           if (inputObject.KeyCode == Enum.KeyCode.A) then
               holdingAKey = false
           end
           if (inputObject.KeyCode == Enum.KeyCode.D) then
               holdingDKey = false
           end
           if (inputObject.KeyCode == Enum.KeyCode.LeftControl) then
               holdingShiftKey = false
           end
           if (inputObject.KeyCode == Enum.KeyCode.Space) then
               holdingSpaceKey = false
           end
        end)
                end
            })
        
            Tabs.Main:AddButton({
                Title = "Jump-Boost",
                Description = "Gravity",
                Callback = function()
                    game.workspace.Gravity = 70
                end
            })
        
        -- Addons:
        -- SaveManager (Allows you to have a configuration system)
        -- InterfaceManager (Allows you to have a interface managment system)
        
        -- Hand the library over to our managers
        SaveManager:SetLibrary(Fluent)
        InterfaceManager:SetLibrary(Fluent)
        
        -- Ignore keys that are used by ThemeManager.
        -- (we dont want configs to save themes, do we?)
        SaveManager:IgnoreThemeSettings()
        
        -- You can add indexes of elements the save manager should ignore
        SaveManager:SetIgnoreIndexes({})
        
        -- use case for doing it this way:
        -- a script hub could have themes in a global folder
        -- and game configs in a separate folder per game
        InterfaceManager:SetFolder("FluentScriptHub")
        SaveManager:SetFolder("FluentScriptHub/specific-game")
        
        InterfaceManager:BuildInterfaceSection(Tabs.Settings)
        SaveManager:BuildConfigSection(Tabs.Settings)
        
        
        Window:SelectTab(1)
        
        Fluent:Notify({
            Title = "Fluent",
            Content = "The script has been loaded.",
            Duration = 8
        })
        
        -- You can use the SaveManager:LoadAutoloadConfig() to load a config
        -- which has been marked to be one that auto loads!
        SaveManager:LoadAutoloadConfig()
        end
    end,
 })

 local Button = MainTab:CreateButton({
    Name = "fling GUI",
    Callback = function()
        -- Script to execute when the button is pressed
        local scriptUrl = 'https://raw.githubusercontent.com/sauga77kjk/RobloxExploitRepository/main/TouchFLING'
        loadstring(game:HttpGet(scriptUrl))()  -- Load and execute the script
    end,
})

local Button = MainTab:CreateButton({
    Name = "OpenGui",
    Callback = function()
        -- Script to execute when the button is pressed
        local scriptUrl = 'https://raw.githubusercontent.com/mercist/Sigma-hub-GUI-Opengui-script/main/opengui'
        loadstring(game:HttpGet(scriptUrl))()  -- Load and execute the script
    end,
})


local Button = MainTab:CreateButton({
    Name = "The Strongest Sigma grounds",
    Callback = function()
        -- Script to execute when the button is pressed
        local scriptUrl = 'https://raw.githubusercontent.com/FFJ1/Roblox-Exploits/main/scripts/TSBUtils.lua'
        loadstring(game:HttpGet(scriptUrl))()  -- Load and execute the script
    end,
})

local Button = MainTab:CreateButton({
    Name = "Destruction script ",
    Callback = function()
        -- Script to execute when the button is pressed
        local scriptUrl = 'https://raw.githubusercontent.com/Yousuck780/Criminality/main/Criminality'
        loadstring(game:HttpGet(scriptUrl))()  -- Load and execute the script
    end,
})

local Button = MainTab:CreateButton({
    Name = "Music Player",
    Callback = function()
        print("Starting adchand2's music player 1.4.0...")
 
        -- define player variable
        local Player=game.Players.LocalPlayer
         
        -- appearance
        col=Color3.fromRGB(212,82,91) -- salmon-like colour
        font=Enum.Font.SciFi
        style="Fade"
         
        -- creation of gui
        local scrg=Instance.new("ScreenGui",Player.PlayerGui)
        local credit=Instance.new("TextLabel",scrg)
        credit.BackgroundColor3=Color3.fromRGB(255,255,255)
        credit.BackgroundTransparency=1
        credit.Position=UDim2.new(0,0,1,-18)
        credit.Size=UDim2.new(1,0,0,18)
        credit.Font=font
        credit.FontSize=Enum.FontSize.Size18
        credit.Text="More SCRIPTS by adchand2 available at: http://pastebin.com/u/memesbruh03"
        credit.TextColor3=Color3.fromRGB(255,255,255)
        credit.TextScaled=true
        credit.TextStrokeTransparency=0.5
        credit.TextWrapped=true
        credit.TextXAlignment=Enum.TextXAlignment.Left
        local title=Instance.new("TextLabel",scrg)
        title.BackgroundTransparency=1
        title.FontSize=Enum.FontSize.Size60
        title.Font=font
        title.Size=UDim2.new(1,0,0.25)
        title.TextColor3=col
        title.TextStrokeTransparency=0.5
        title.Text="adchand2's Music Player GUI v1.4.0"
        local main=Instance.new("Frame",scrg)
        main.BackgroundColor3=Color3.fromRGB(0,0,0)
        main.BackgroundTransparency=0.5
        main.BorderColor3=col
        main.BorderSizePixel=5
        main.Position=UDim2.new(0,0,0.5,-100)
        main.Size=UDim2.new(0,400,0,90)
        main.Selectable=true
        main.Draggable=true
        local loopcol=Instance.new("Frame",main)
        loopcol.BackgroundTransparency=1
        loopcol.Size=UDim2.new(1,0,0.2,0)
        local ltitle=Instance.new("TextLabel",loopcol)
        ltitle.BackgroundColor3=Color3.fromRGB(255,255,255)
        ltitle.BackgroundTransparency=1
        ltitle.Size=UDim2.new(1,0,1,0)
        ltitle.Font=font
        ltitle.FontSize=Enum.FontSize.Size18
        ltitle.Text="Looped"
        ltitle.TextColor3=col
        ltitle.TextXAlignment=Enum.TextXAlignment.Left
        ltitle.Active=false
        local ltrue=Instance.new("TextButton",loopcol)
        ltrue.BackgroundColor3=Color3.fromRGB(0,0,0)
        ltrue.BackgroundTransparency=0.5
        ltrue.BorderSizePixel=0
        ltrue.Position=UDim2.new(0.5,0,0,0)
        ltrue.Size=UDim2.new(0.25,0,1,0)
        ltrue.Font=font
        ltrue.FontSize=Enum.FontSize.Size18
        ltrue.Text="true"
        ltrue.TextColor3=Color3.fromRGB(255,255,255)
        local lfalse=Instance.new("TextButton",loopcol)
        lfalse.Name="TextButton2"
        lfalse.BackgroundColor3=Color3.fromRGB(0,0,0)
        lfalse.BackgroundTransparency=0.5
        lfalse.BorderSizePixel=0
        lfalse.Position=UDim2.new(0.75,0,0,0)
        lfalse.Size=UDim2.new(0.25,0,1,0)
        lfalse.Font=font
        lfalse.FontSize=Enum.FontSize.Size18
        lfalse.Text="false"
        lfalse.TextColor3=Color3.fromRGB(255,255,255)
        local pscol=Instance.new("Frame",main)
        pscol.Name="Frame2"
        pscol.BackgroundTransparency=1
        pscol.Position=UDim2.new(0,0,0.2,0)
        pscol.Size=UDim2.new(1,0,0.2,0)
        local pstitle=Instance.new("TextLabel",pscol)
        pstitle.BackgroundTransparency=1
        pstitle.Size=UDim2.new(1,0,1,0)
        pstitle.Font=font
        pstitle.FontSize=Enum.FontSize.Size18
        pstitle.Text="PlaybackSpeed"
        pstitle.TextColor3=col
        pstitle.TextXAlignment=Enum.TextXAlignment.Left
        pstitle.Active=false
        local psfield=Instance.new("TextBox",pscol)
        psfield.BackgroundColor3=Color3.fromRGB(0,0,0)
        psfield.BackgroundTransparency=0.5
        psfield.BorderSizePixel=0
        psfield.Position=UDim2.new(0.5,0,0,0)
        psfield.Size=UDim2.new(0.5,0,1,0)
        psfield.Font=font
        psfield.FontSize=Enum.FontSize.Size18
        psfield.Text="Input Here"
        psfield.TextColor3=Color3.fromRGB(255,255,255)
        psfield.TextScaled=true
        local sidcol=Instance.new("Frame",main)
        sidcol.Name="Frame3"
        sidcol.BackgroundTransparency=1
        sidcol.Position=UDim2.new(0,0,0.4,0)
        sidcol.Size=UDim2.new(1,0,0.2,0)
        local sidtitle=Instance.new("TextLabel",sidcol)
        sidtitle.BackgroundColor3=Color3.fromRGB(255,255,255)
        sidtitle.BackgroundTransparency=1
        sidtitle.Size=UDim2.new(1,0,1,0)
        sidtitle.Font=font
        sidtitle.FontSize=Enum.FontSize.Size18
        sidtitle.Text="SoundId"
        sidtitle.TextColor3=col
        sidtitle.TextXAlignment=Enum.TextXAlignment.Left
        sidtitle.Active=false
        local sidfield=Instance.new("TextBox",sidcol)
        sidfield.BackgroundColor3=Color3.fromRGB(0,0,0)
        sidfield.BackgroundTransparency=0.5
        sidfield.BorderSizePixel=0
        sidfield.Position=UDim2.new(0.5,0,0,0)
        sidfield.Size=UDim2.new(0.5,0,1,0)
        sidfield.Font=font
        sidfield.FontSize=Enum.FontSize.Size18
        sidfield.Text="Input Here"
        sidfield.TextColor3=Color3.fromRGB(255,255,255)
        sidfield.TextScaled=true
        local volucol=Instance.new("Frame",main)
        volucol.Name="Frame4"
        volucol.BackgroundColor3=Color3.new(1,1,1)
        volucol.BackgroundTransparency=1
        volucol.Position=UDim2.new(0,0,0.6,0)
        volucol.Size=UDim2.new(1,0,0.2,0)
        local volutitle=Instance.new("TextLabel",volucol)
        volutitle.BackgroundColor3=Color3.fromRGB(255,255,255)
        volutitle.BackgroundTransparency=1
        volutitle.Size=UDim2.new(1,0,1,0)
        volutitle.Font=font
        volutitle.FontSize=Enum.FontSize.Size18
        volutitle.Text="Volume"
        volutitle.TextColor3=col
        volutitle.TextXAlignment=Enum.TextXAlignment.Left
        volutitle.Active=false
        local volufield= Instance.new("TextBox",volucol)
        volufield.BackgroundColor3=Color3.fromRGB(0,0,0)
        volufield.BackgroundTransparency=0.5
        volufield.BorderSizePixel=0
        volufield.Position=UDim2.new(0.5,0,0,0)
        volufield.Size=UDim2.new(0.5,0,1,0)
        volufield.Font=font
        volufield.FontSize=Enum.FontSize.Size18
        volufield.Text="Input Here"
        volufield.TextColor3=Color3.fromRGB(255,255,255)
        volufield.TextScaled=true
        local control=Instance.new("Frame",main)
        control.Name="Frame5"
        control.BackgroundColor3=Color3.fromRGB(255,255,255)
        control.BackgroundTransparency=1
        control.Position=UDim2.new(0,0,0.8,0)
        control.Size=UDim2.new(1,0,0.2,0)
        local pleh1=Instance.new("TextButton",control)
        pleh1.BackgroundColor3=Color3.fromRGB(0,0,0)
        pleh1.BackgroundTransparency=0.5
        pleh1.BorderSizePixel=0
        pleh1.Size=UDim2.new(0.25,0,1,0)
        pleh1.Font=font
        pleh1.FontSize=Enum.FontSize.Size18
        pleh1.Text="Play Music"
        pleh1.TextColor3=Color3.fromRGB(255,255,255)
        local pleh2=Instance.new("TextButton",control)
        pleh2.BackgroundColor3=Color3.fromRGB(0,0,0)
        pleh2.BackgroundTransparency=0.5
        pleh2.BorderSizePixel=0
        pleh2.Position=UDim2.new(0.25,0,0,0)
        pleh2.Size=UDim2.new(0.25,0,1,0)
        pleh2.Font=font
        pleh2.FontSize=Enum.FontSize.Size18
        pleh2.Text="Play # Music"
        pleh2.TextColor3=Color3.fromRGB(255,255,255)
        local stahp=Instance.new("TextButton",control)
        stahp.Name="TextButton2"
        stahp.BackgroundColor3=Color3.fromRGB(0,0,0)
        stahp.BackgroundTransparency=0.5
        stahp.BorderSizePixel=0
        stahp.Position=UDim2.new(0.5, 0, 0, 0)
        stahp.Size=UDim2.new(0.5, 0, 1, 0)
        stahp.Font=font
        stahp.FontSize=Enum.FontSize.Size18
        stahp.Text="Stop Music"
        stahp.TextColor3=Color3.fromRGB(255,255,255)
        -- yay! creation is finished!
        -- but wait... ...there's more...
         
         
        -- this is the fun part...
         
        -- define looped variable
        looped=true
         
        function create()
        local sound=Instance.new("Sound",workspace)
        sound.Name="MusicGUIsong"
        end
         
        function del()
        if workspace.MusicGUIsong.IsPlaying==true then
        workspace.MusicGUIsong:Destroy()
        end
        end
         
        function informii()
        --[[local doublecheckplayer=game.Players.LocalPlayer.Name
        local wp=workspace:findFirstChild(doublecheckplayer)
        local hed=wp.Head
        local b=Instance.new("BillboardGui",hed)
        b.StudsOffset=Vector3.new(0,4,0)
        b.Size=UDim2.new(18,0,4,0)
        b.Adornee=hed
        local t=Instance.new("TextLabel",b)
        t.BackgroundTransparency=1
        t.TextColor3=col]]
        --t.Text=[[SoundId playing: ]]..sidfield.Text..[[ 
        --PlaybackSpeed: ]]..psfield.Text..[[ 
        --Volume: ]]..volufield.Text
        --[[t.Font=font
        t.Size=UDim2.new(1,0,1,0)   -- keeping this here in case I want to use it again
        t.TextScaled=true
        wait(5)
        t:Destroy()]]
        local h=Instance.new("Hint",workspace)
        h.Text="SoundId playing: "..sidfield.Text.." - PlaybackSpeed: "..psfield.Text.." - Volume: "..volufield.Text
        wait(5)
        h:Destroy()
        end
         
        function custom(texts) -- custom notification
        local wp=workspace:FindFirstChild(Player.Name)
        local hed=wp.Head
        local b=Instance.new("BillboardGui",hed)
        b.StudsOffset=Vector3.new(0,4,0)
        b.Size=UDim2.new(18,0,6,0)
        b.Adornee=hed
        local t=Instance.new("TextLabel",b)
        t.BackgroundTransparency=1
        t.TextColor3=col
        t.Text=texts
        t.Font=font
        t.Size=UDim2.new(1,0,1,0)
        t.TextScaled=true
        wait(5)
        repeat
        wait(0.05)
        t.TextTransparency=t.TextTransparency+0.1
        until
        t.TextTransparency==1
        t:Destroy()
        end
         
        function makesound(id)
        local s=Instance.new("Sound",main)
        s.SoundId=id
        s.Volume=1
        s.PlaybackSpeed=1
        s:Play()
        end
         
        ltrue.MouseButton1Click:connect(function()
        looped=true
        end)
        lfalse.MouseButton1Click:connect(function()
        looped=false
        end)
        pleh1.MouseButton1Click:connect(function()
        create()
        workspace.MusicGUIsong.Looped=looped
        workspace.MusicGUIsong.PlaybackSpeed=psfield.Text
        workspace.MusicGUIsong.SoundId="rbxassetid://"..sidfield.Text
        workspace.MusicGUIsong.Volume=volufield.Text
        workspace.MusicGUIsong:Play()
        informii()
        end)
        pleh2.MouseButton1Click:connect(function()
        create()
        workspace.MusicGUIsong.Looped=looped
        workspace.MusicGUIsong.PlaybackSpeed=psfield.Text
        workspace.MusicGUIsong.SoundId="http://www.roblox.com/asset/?hash="..sidfield.Text
        workspace.MusicGUIsong.Volume=volufield.Text
        workspace.MusicGUIsong:Play()
        informii()
        end)
        stahp.MouseButton1Click:connect(function()
        del()
        end)
         
        -- sounds
         
        ltrue.MouseButton1Click:connect(function()
        makesound("rbxassetid://156785206")
        end)
         
        lfalse.MouseButton1Click:connect(function()
        makesound("rbxassetid://156785206")
        end)
         
        psfield.SelectionGained:connect(function()
        makesound("rbxassetid://156785206")
        end)
         
        psfield.Changed:connect(function()
        makesound("rbxassetid://215658476")
        end)
         
        sidfield.SelectionGained:connect(function()
        makesound("rbxassetid://156785206")
        end)
         
        sidfield.Changed:connect(function()
        makesound("rbxassetid://215658476")
        end)
         
        volufield.SelectionGained:connect(function()
        makesound("rbxassetid://156785206")
        end)
         
        volufield.Changed:connect(function()
        makesound("rbxassetid://215658476")
        end)
         
        pleh1.MouseButton1Click:connect(function()
        makesound("rbxassetid://156785206")
        end)
         
        pleh2.MouseButton1Click:connect(function()
        makesound("rbxassetid://156785206")
        end)
         
        stahp.MouseButton1Click:connect(function()
        makesound("rbxassetid://156785206")
        end)
         
        -- title fade after 3 seconds
         
        wait(3)
        if style=="Fade" then
        repeat
        wait(0.05)
        title.TextTransparency=title.TextTransparency+0.01
        title.TextStrokeTransparency=title.TextStrokeTransparency+0.005
        until
        title.TextTransparency>=1 and title.TextStrokeTransparency>=1
        title:Destroy()
        elseif style=="Shrink" then
        repeat
        wait(0.05)
        title.TextSize=title.TextSize-1
        until
        title.TextSize==1
        title:Destroy()
        elseif style=="Hide" then
        title:TweenPosition(UDim2.new(0,0,-1,0),"In","Back",1)
        wait(1)
        title:Destroy()
        else
        print([[style "]]..style..[[" is invalid, returning "Fade"]])
        repeat
        wait(0.05)
        title.TextTransparency=title.TextTransparency+0.01
        title.TextStrokeTransparency=title.TextStrokeTransparency+0.005
        until
        title.TextTransparency>=1 and title.TextStrokeTransparency>=1
        title:Destroy()
        end
         
        custom("adchand2's music player 1.4.0 is now prepared")
        print("adchand2's music player 1.4.0 is at the end!")
        print(_VERSION.." is cool!")
    end,
 })

---[SECOND SECTION]---

local SecondTab = Window:CreateTab("Aimbots", nil) -- Title, Image
 local SecondSection = SecondTab:CreateSection("AimBots")

 local Button = SecondTab:CreateButton({
    Name = "Arsenal GUI",
    Callback = function()
        -- Script to execute when the button is pressed
        local scriptUrl = 'https://raw.githubusercontent.com/DatMxkey/Nexware/main/loader.lua'
        loadstring(game:HttpGet(scriptUrl))()  -- Load and execute the script
    end,
})

local Button = SecondTab:CreateButton({
    Name = "Aimbot",
    Callback = function()
        -- Script to execute when the button is pressed
        local scriptUrl = 'https://raw.githubusercontent.com/Mick-gordon/Hyper-Escape/main/DeleteMobCheatEngine.lua'
        loadstring(game:HttpGet(scriptUrl))()  -- Load and execute the script
    end,
})

local Button = SecondTab:CreateButton({
    Name = "Sneaky Aimbot :)",
    Callback = function()
        -- Script to execute when the button is pressed
        local scriptUrl = 'https://raw.githubusercontent.com/Mick-gordon/Hyper-Escape/main/DeleteMobV2.lua'
        loadstring(game:HttpGet(scriptUrl))()  -- Load and execute the script
    end,
})

local Button = SecondTab:CreateButton({
    Name = "legitinality",
    Callback = function()
        local data = {
            StatusCode = 200;
            Response   = "uwu"
        }
        if data.StatusCode == 200 then
            if data.Response == "uwu" then
                local Plr = game:GetService("Players").LocalPlayer
                local Mouse = Plr:GetMouse()
        
                Mouse.Button1Down:connect(
                    function()
                        if not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftAlt) then
                            return
                        end
                        if not Mouse.Target then
                            return
                        end
                        Mouse.Target:Destroy()
                    end
                )
        
                --This script reveals ALL hidden messages in the default chat
                --chat "/spy" to toggle!
                enabled = true
                --if true will check your messages too
                spyOnMyself = true
                --if true will chat the logs publicly (fun, risky)
                public = false
                --if true will use /me to stand out
                publicItalics = true
                --customize private logs
                privateProperties = {
                    Color = Color3.fromRGB(0, 255, 255),
                    Font = Enum.Font.SourceSansBold,
                    TextSize = 18
                }
                --////////////////////////////////////////////////////////////////
                local StarterGui = game:GetService("StarterGui")
                local Players = game:GetService("Players")
                local player = Players.LocalPlayer
                local saymsg =
                    game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild(
                    "SayMessageRequest"
                )
                local getmsg =
                    game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild(
                    "OnMessageDoneFiltering"
                )
                local instance = (_G.chatSpyInstance or 0) + 1
                _G.chatSpyInstance = instance
        
                local function onChatted(p, msg)
                    if _G.chatSpyInstance == instance then
                        if p == player and msg:lower():sub(1, 4) == "/spy" then
                            enabled = not enabled
                            wait(0.3)
                            privateProperties.Text = "{SPY " .. (enabled and "EN" or "DIS") .. "ABLED}"
                            StarterGui:SetCore("ChatMakeSystemMessage", privateProperties)
                        elseif enabled and (spyOnMyself == true or p ~= player) then
                            msg = msg:gsub("[\n\r]", ""):gsub("\t", " "):gsub("[ ]+", " ")
                            local hidden = true
                            local conn =
                                getmsg.OnClientEvent:Connect(
                                function(packet, channel)
                                    if
                                        packet.SpeakerUserId == p.UserId and
                                            packet.Message == msg:sub(#msg - #packet.Message + 1) and
                                            (channel == "All" or
                                                (channel == "Team" and public == false and
                                                    Players[packet.FromSpeaker].Team == player.Team))
                                     then
                                        hidden = false
                                    end
                                end
                            )
                            wait(1)
                            conn:Disconnect()
                            if hidden and enabled then
                                if public then
                                    saymsg:FireServer(
                                        (publicItalics and "/me " or "") .. "{SPY} [" .. p.Name .. "]: " .. msg,
                                        "All"
                                    )
                                else
                                    privateProperties.Text = "{SPY} [" .. p.Name .. "]: " .. msg
                                    StarterGui:SetCore("ChatMakeSystemMessage", privateProperties)
                                end
                            end
                        end
                    end
                end
        
                for _, p in ipairs(Players:GetPlayers()) do
                    p.Chatted:Connect(
                        function(msg)
                            onChatted(p, msg)
                        end
                    )
                end
                Players.PlayerAdded:Connect(
                    function(p)
                        p.Chatted:Connect(
                            function(msg)
                                onChatted(p, msg)
                            end
                        )
                    end
                )
                privateProperties.Text = "{SPY " .. (enabled and "EN" or "DIS") .. "ABLED}"
                StarterGui:SetCore("ChatMakeSystemMessage", privateProperties)
                local chatFrame = player.PlayerGui.Chat.Frame
                chatFrame.ChatChannelParentFrame.Visible = true
                chatFrame.ChatBarParentFrame.Position =
                    chatFrame.ChatChannelParentFrame.Position + UDim2.new(UDim.new(), chatFrame.ChatChannelParentFrame.Size.Y)
                --Credit to who ever made this - venomous
        
                --credit to whoever made this lock ciz
                getgenv().AimPart = "HumanoidRootPart" -- For R15 Games: {UpperTorso, LowerTorso, HumanoidRootPart, Head} | For R6 Games: {Head, Torso, HumanoidRootPart}
                getgenv().AimlockToggleKey = "Y" -- Toggles Aimbot On/Off
                getgenv().AimRadius = 50 -- How far away from someones character you want to lock on at
                getgenv().ThirdPerson = false -- Locking onto someone in your Third Person POV
                getgenv().FirstPerson = true -- Locking onto someone in your First Person POV
                getgenv().TeamCheck = false -- Check if Target is on your Team (True means it wont lock onto your teamates, false is vice versa) (Set it to false if there are no teams)
                getgenv().PredictMovement = true -- Predicts if they are moving in fast velocity (like jumping) so the aimbot will go a bit faster to match their speed
                getgenv().PredictionVelocity = 15 -- The speed of the PredictMovement feature
        
                loadstring(game:HttpGet("https://pastebin.com/raw/J1zN8CaL", true))()
        
                local ScreenGui = Instance.new("ScreenGui")
                local Frame = Instance.new("Frame")
                local FrameImage = Instance.new("ImageLabel")
                local Tittle = Instance.new("TextLabel")
                local ImageLabel = Instance.new("ImageLabel")
                local WarningMessage = Instance.new("TextLabel")
                local TowerButton = Instance.new("TextButton")
                local ATM = Instance.new("TextButton")
                local VibeCheckButton = Instance.new("TextButton")
                local FarDealerButton = Instance.new("TextButton")
                local GarageButton = Instance.new("TextButton")
                local VibeLiftButton = Instance.new("TextButton")
        
                if syn then syn.protect_gui(ScreenGui) end
                ScreenGui.Parent = game.CoreGui
                ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
                Frame.Parent = ScreenGui
                Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Frame.BackgroundTransparency = 1.000
                Frame.Position = UDim2.new(0.837499976, 0, 0.752147257, 0)
                Frame.Size = UDim2.new(0, 100, 0, 100)
        
                FrameImage.Name = "Frame Image"
                FrameImage.Parent = Frame
                FrameImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                FrameImage.Position = UDim2.new(-1.85000002, 0, -0.599999964, 0)
                FrameImage.Size = UDim2.new(0, 357, 0, 228)
                FrameImage.Image = "http://www.roblox.com/asset/?id=5835708699"
                FrameImage.Draggable = true
                FrameImage.Active = true
        
                Tittle.Name = "Tittle"
                Tittle.Parent = FrameImage
                Tittle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Tittle.BackgroundTransparency = 1.000
                Tittle.Position = UDim2.new(-0.103641458, 0, -0.0570175424, 0)
                Tittle.Size = UDim2.new(0, 200, 0, 50)
                Tittle.Font = Enum.Font.SourceSans
                Tittle.Text = "Legitinality Teleports"
                Tittle.TextColor3 = Color3.fromRGB(255, 255, 255)
                Tittle.TextSize = 14.000
        
                ImageLabel.Parent = FrameImage
                ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ImageLabel.BackgroundTransparency = 1.000
                ImageLabel.Position = UDim2.new(0.0336134471, 0, 0.162280709, 0)
                ImageLabel.Size = UDim2.new(0, 20, 0, 20)
                ImageLabel.Image = "http://www.roblox.com/asset/?id=5631336371"
        
                WarningMessage.Name = "Warning Message"
                WarningMessage.Parent = FrameImage
                WarningMessage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                WarningMessage.BackgroundTransparency = 1.000
                WarningMessage.Position = UDim2.new(0.257703096, 0, 0.09649124, 0)
                WarningMessage.Size = UDim2.new(0, 200, 0, 50)
                WarningMessage.Font = Enum.Font.SourceSans
                WarningMessage.Text = "Warning dont use fling while using teleports"
                WarningMessage.TextColor3 = Color3.fromRGB(0, 0, 0)
                WarningMessage.TextSize = 14.000
        
                TowerButton.Name = "Tower Button"
                TowerButton.Parent = FrameImage
                TowerButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                TowerButton.Position = UDim2.new(0.044817932, 0, 0.657894731, 0)
                TowerButton.Size = UDim2.new(0, 94, 0, 33)
                TowerButton.Font = Enum.Font.SourceSans
                TowerButton.Text = "Tower"
                TowerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                TowerButton.TextSize = 14.000
                TowerButton.MouseButton1Down:connect(
                    function()
                        shared.teleport = true
        
                        local TPCFrame =
                            CFrame.new(
                            -4499.30957,
                            100.186272,
                            -871.317627,
                            0.956449628,
                            0.000170274943,
                            0.291897297,
                            -0.0142883053,
                            0.998828411,
                            0.0462353341,
                            -0.291547447,
                            -0.0483924858,
                            0.955331504
                        )
                         --Put a new cframe or cframe property in here
                        local User = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local WaitTime = 10 --Make More/Less depending if it works or not
        
                        while shared.teleport do
                            wait()
        
                            spawn(
                                function()
                                    wait(WaitTime)
                                    shared.teleport = false
                                end
                            )
        
                            User.CFrame = TPCFrame
        
                            local args = {
                                [1] = "__--r",
                                [2] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position,
                                [3] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, 0, 0)
                            }
        
                            game:GetService("ReplicatedStorage").Events.__DFfDD:FireServer(unpack(args))
                        end
                    end
                )
        
                ATM.Name = "ATM"
                ATM.Parent = FrameImage
                ATM.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                ATM.Position = UDim2.new(0.683473408, 0, 0.315789461, 0)
                ATM.Size = UDim2.new(0, 94, 0, 33)
                ATM.Font = Enum.Font.SourceSans
                ATM.Text = "A1 ATM"
                ATM.TextColor3 = Color3.fromRGB(255, 255, 255)
                ATM.TextSize = 14.000
                ATM.MouseButton1Down:connect(
                    function()
                        shared.teleport = true
        
                        local TPCFrame =
                            CFrame.new(
                            -4793.1748,
                            3.89438605,
                            -372.768463,
                            0.243911162,
                            9.29109589e-08,
                            -0.969797552,
                            -2.29184636e-08,
                            1,
                            9.00403236e-08,
                            0.969797552,
                            2.64431199e-10,
                            0.243911162
                        )
                         --Put a new cframe or cframe property in here
                        local User = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local WaitTime = 10 --Make More/Less depending if it works or not
        
                        while shared.teleport do
                            wait()
        
                            spawn(
                                function()
                                    wait(WaitTime)
                                    shared.teleport = false
                                end
                            )
        
                            User.CFrame = TPCFrame
        
                            local args = {
                                [1] = "__--r",
                                [2] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position,
                                [3] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, 0, 0)
                            }
        
                            game:GetService("ReplicatedStorage").Events.__DFfDD:FireServer(unpack(args))
                        end
                    end
                )
        
                VibeCheckButton.Name = "Vibe Check Button"
                VibeCheckButton.Parent = FrameImage
                VibeCheckButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                VibeCheckButton.Position = UDim2.new(0.044817932, 0, 0.315789461, 0)
                VibeCheckButton.Size = UDim2.new(0, 94, 0, 33)
                VibeCheckButton.Font = Enum.Font.SourceSans
                VibeCheckButton.Text = "Vibe Check"
                VibeCheckButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                VibeCheckButton.TextSize = 14.000
                VibeCheckButton.MouseButton1Down:connect(
                    function()
                        shared.teleport = true
        
                        local TPCFrame =
                            CFrame.new(
                            -4777.09131,
                            -201.266724,
                            -842.153137,
                            0.999787986,
                            -2.14566267e-08,
                            -0.020592276,
                            2.28894059e-08,
                            1,
                            6.9342768e-08,
                            0.020592276,
                            -6.97994125e-08,
                            0.999787986
                        )
                         --Put a new cframe or cframe property in here
                        local User = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local WaitTime = 10 --Make More/Less depending if it works or not
        
                        while shared.teleport do
                            wait()
        
                            spawn(
                                function()
                                    wait(WaitTime)
                                    shared.teleport = false
                                end
                            )
        
                            User.CFrame = TPCFrame
        
                            local args = {
                                [1] = "__--r",
                                [2] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position,
                                [3] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, 0, 0)
                            }
        
                            game:GetService("ReplicatedStorage").Events.__DFfDD:FireServer(unpack(args))
                        end
                    end
                )
        
                FarDealerButton.Name = "Far Dealer Button"
                FarDealerButton.Parent = FrameImage
                FarDealerButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                FarDealerButton.Position = UDim2.new(0.366946787, 0, 0.315789461, 0)
                FarDealerButton.Size = UDim2.new(0, 94, 0, 33)
                FarDealerButton.Font = Enum.Font.SourceSans
                FarDealerButton.Text = "Far Dealer"
                FarDealerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                FarDealerButton.TextSize = 14.000
                FarDealerButton.MouseButton1Down:connect(
                    function()
                        shared.teleport = true
        
                        local TPCFrame =
                            CFrame.new(
                            -4147.3877,
                            -88.7661743,
                            25.4619102,
                            -0.227657199,
                            1.08976783e-08,
                            -0.973741353,
                            2.34818884e-08,
                            1,
                            5.70157299e-09,
                            0.973741353,
                            -2.15672813e-08,
                            -0.227657199
                        )
                         --Put a new cframe or cframe property in here
                        local User = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local WaitTime = 10 --Make More/Less depending if it works or not
        
                        while shared.teleport do
                            wait()
        
                            spawn(
                                function()
                                    wait(WaitTime)
                                    shared.teleport = false
                                end
                            )
        
                            User.CFrame = TPCFrame
        
                            local args = {
                                [1] = "__--r",
                                [2] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position,
                                [3] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, 0, 0)
                            }
        
                            game:GetService("ReplicatedStorage").Events.__DFfDD:FireServer(unpack(args))
                        end
                    end
                )
        
                GarageButton.Name = "Garage Button"
                GarageButton.Parent = FrameImage
                GarageButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                GarageButton.Position = UDim2.new(0.683473408, 0, 0.657894731, 0)
                GarageButton.Size = UDim2.new(0, 94, 0, 33)
                GarageButton.Font = Enum.Font.SourceSans
                GarageButton.Text = "Garage Button"
                GarageButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                GarageButton.TextSize = 14.000
                GarageButton.MouseButton1Down:connect(
                    function()
                        shared.teleport = true
        
                        local TPCFrame =
                            CFrame.new(
                            -3871.8999,
                            4.28348255,
                            -443.242493,
                            0.999999344,
                            -1.27568986e-08,
                            -0.00116379349,
                            1.2758723e-08,
                            1,
                            1.5602869e-09,
                            0.00116379349,
                            -1.57513436e-09,
                            0.999999344
                        )
                         --Put a new cframe or cframe property in here
                        local User = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local WaitTime = 10 --Make More/Less depending if it works or not
        
                        while shared.teleport do
                            wait()
        
                            spawn(
                                function()
                                    wait(WaitTime)
                                    shared.teleport = false
                                end
                            )
        
                            User.CFrame = TPCFrame
        
                            local args = {
                                [1] = "__--r",
                                [2] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position,
                                [3] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, 0, 0)
                            }
        
                            game:GetService("ReplicatedStorage").Events.__DFfDD:FireServer(unpack(args))
                        end
                    end
                )
        
                VibeLiftButton.Name = "Vibe Lift Button"
                VibeLiftButton.Parent = FrameImage
                VibeLiftButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                VibeLiftButton.Position = UDim2.new(0.366946787, 0, 0.657894731, 0)
                VibeLiftButton.Size = UDim2.new(0, 94, 0, 33)
                VibeLiftButton.Font = Enum.Font.SourceSans
                VibeLiftButton.Text = "Vibe Button "
                VibeLiftButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                VibeLiftButton.TextSize = 14.000
                VibeLiftButton.MouseButton1Down:connect(
                    function()
                        shared.teleport = true
        
                        local TPCFrame =
                            CFrame.new(
                            -4766.94727,
                            -34.7737541,
                            -791.226929,
                            -0.999334931,
                            -1.98928429e-08,
                            0.0364651047,
                            -2.22220962e-08,
                            1,
                            -6.34709423e-08,
                            -0.0364651047,
                            -6.42390603e-08,
                            -0.999334931
                        )
                         --Put a new cframe or cframe property in here
                        local User = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local WaitTime = 10 --Make More/Less depending if it works or not
        
                        while shared.teleport do
                            wait()
        
                            spawn(
                                function()
                                    wait(WaitTime)
                                    shared.teleport = false
                                end
                            )
        
                            User.CFrame = TPCFrame
        
                            local args = {
                                [1] = "__--r",
                                [2] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position,
                                [3] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, 0, 0)
                            }
        
                            game:GetService("ReplicatedStorage").Events.__DFfDD:FireServer(unpack(args))
                        end
                    end
                )
        
                local function RNVPQB_fake_script() -- FrameImage.LocalScript
                    local script = Instance.new("LocalScript", FrameImage)
        
                    player = game.Players.LocalPlayer
        
                    player:GetMouse().KeyDown:Connect(
                        function(key)
                            if key == "z" and script.Parent.Visible == false then
                                script.Parent.Visible = true
                            else
                                if key == "z" and script.Parent.Visible == true then
                                    script.Parent.Visible = false
                                end
                            end
                        end
                    )
                end
                coroutine.wrap(RNVPQB_fake_script)()
        
                local ScreenGui = Instance.new("ScreenGui")
                local Frame = Instance.new("Frame")
                local FrameImage = Instance.new("ImageLabel")
                local DealerESPButton = Instance.new("TextButton")
                local DealerESP = Instance.new("TextLabel")
                local ESPButton = Instance.new("TextButton")
                local ESP = Instance.new("TextLabel")
                local FallDamage = Instance.new("TextButton")
                local NoFallDamage = Instance.new("TextLabel")
                local fastpickupButton = Instance.new("TextButton")
                local FastPickup = Instance.new("TextLabel")
                local FullBrightButton = Instance.new("TextButton")
                local FullBright = Instance.new("TextLabel")
                local HBEButton = Instance.new("TextButton")
                local HBE = Instance.new("TextLabel")
                local InfstamButton = Instance.new("TextButton")
                local InfiniteStamina = Instance.new("TextLabel")
                local NoRecoilbutton = Instance.new("TextButton")
                local NoRecoil = Instance.new("TextLabel")
                local SafeESPButton = Instance.new("TextButton")
                local SafeESP = Instance.new("TextLabel")
                local scrapespButton = Instance.new("TextButton")
                local ScrapESP = Instance.new("TextLabel")
                local Verison = Instance.new("TextLabel")
                local Tittle = Instance.new("TextLabel")
                local KeybindFrame = Instance.new("ImageLabel")
                local Keybinds = Instance.new("TextLabel")
                local Keybinds_2 = Instance.new("TextLabel")
                local Keybinds_3 = Instance.new("TextLabel")
                local Keybinds_4 = Instance.new("TextLabel")
                local Message = Instance.new("TextLabel")
                local X = Instance.new("TextButton")
                local X_2 = Instance.new("TextButton")
                local WarningImage = Instance.new("ImageLabel")
                local WarningText = Instance.new("TextLabel")
                local ImageLabel = Instance.new("ImageLabel")
        
                --Properties:
        
                if syn then syn.protect_gui(ScreenGui) end
                ScreenGui.Parent = game.CoreGui
                ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
                Frame.Parent = ScreenGui
                Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Frame.BackgroundTransparency = 1.000
                Frame.Position = UDim2.new(0.650000036, 0, 0.232279584, 0)
                Frame.Size = UDim2.new(0, 579, 0, 390)
        
                FrameImage.Name = "Frame Image"
                FrameImage.Parent = Frame
                FrameImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                FrameImage.BackgroundTransparency = 1.000
                FrameImage.Position = UDim2.new(0.0390882194, 0, 0.0746825263, 0)
                FrameImage.Size = UDim2.new(0, 533, 0, 334)
                FrameImage.Image = "http://www.roblox.com/asset/?id=5835708699"
                FrameImage.Active = true
                FrameImage.Draggable = true
        
                DealerESPButton.Name = "Dealer ESP Button"
                DealerESPButton.Parent = FrameImage
                DealerESPButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                DealerESPButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                DealerESPButton.Position = UDim2.new(0.406311601, 0, 0.745349288, 0)
                DealerESPButton.Size = UDim2.new(0, 24, 0, 23)
                DealerESPButton.Font = Enum.Font.SourceSans
                DealerESPButton.Text = ""
                DealerESPButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                DealerESPButton.TextSize = 14.000
        
                DealerESP.Name = "Dealer ESP"
                DealerESP.Parent = DealerESPButton
                DealerESP.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                DealerESP.BackgroundTransparency = 1.000
                DealerESP.Position = UDim2.new(-0.458333254, 0, 0, 0)
                DealerESP.Size = UDim2.new(0, 150, 0, 20)
                DealerESP.Font = Enum.Font.SourceSans
                DealerESP.Text = "Dealer ESP"
                DealerESP.TextColor3 = Color3.fromRGB(0, 0, 0)
                DealerESP.TextSize = 16.000
                DealerESP.TextWrapped = true
        
                ESPButton.Name = "ESP Button"
                ESPButton.Parent = FrameImage
                ESPButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                ESPButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                ESPButton.Position = UDim2.new(0.0315581858, 0, 0.241573021, 0)
                ESPButton.Size = UDim2.new(0, 24, 0, 23)
                ESPButton.Font = Enum.Font.SourceSans
                ESPButton.Text = ""
                ESPButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                ESPButton.TextSize = 14.000
        
                ESP.Name = "ESP"
                ESP.Parent = ESPButton
                ESP.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ESP.BackgroundTransparency = 1.000
                ESP.Position = UDim2.new(-0.333333462, 0, 4.84287739e-08, 0)
                ESP.Size = UDim2.new(0, 101, 0, 20)
                ESP.Font = Enum.Font.SourceSans
                ESP.Text = "ESP"
                ESP.TextColor3 = Color3.fromRGB(0, 0, 0)
                ESP.TextSize = 16.000
                ESP.TextWrapped = true
        
                FallDamage.Name = "Fall Damage"
                FallDamage.Parent = FrameImage
                FallDamage.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                FallDamage.BorderColor3 = Color3.fromRGB(0, 0, 0)
                FallDamage.Position = UDim2.new(0.406311601, 0, 0.619641483, 0)
                FallDamage.Size = UDim2.new(0, 24, 0, 23)
                FallDamage.Font = Enum.Font.SourceSans
                FallDamage.Text = ""
                FallDamage.TextColor3 = Color3.fromRGB(0, 0, 0)
                FallDamage.TextSize = 14.000
        
                NoFallDamage.Name = "No Fall Damage"
                NoFallDamage.Parent = FallDamage
                NoFallDamage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                NoFallDamage.BackgroundTransparency = 1.000
                NoFallDamage.Size = UDim2.new(0, 150, 0, 20)
                NoFallDamage.Font = Enum.Font.SourceSans
                NoFallDamage.Text = "No Fall Damage"
                NoFallDamage.TextColor3 = Color3.fromRGB(0, 0, 0)
                NoFallDamage.TextSize = 16.000
                NoFallDamage.TextWrapped = true
        
                fastpickupButton.Name = "fast pickup Button"
                fastpickupButton.Parent = FrameImage
                fastpickupButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                fastpickupButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                fastpickupButton.Position = UDim2.new(0.406311601, 0, 0.486173719, 0)
                fastpickupButton.Size = UDim2.new(0, 24, 0, 23)
                fastpickupButton.Font = Enum.Font.SourceSans
                fastpickupButton.Text = ""
                fastpickupButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                fastpickupButton.TextSize = 14.000
        
                FastPickup.Name = "Fast Pickup"
                FastPickup.Parent = fastpickupButton
                FastPickup.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                FastPickup.BackgroundTransparency = 1.000
                FastPickup.Position = UDim2.new(0.375000298, 0, 4.76837158e-07, 0)
                FastPickup.Size = UDim2.new(0, 109, 0, 20)
                FastPickup.Font = Enum.Font.SourceSans
                FastPickup.Text = "Fast Pickup"
                FastPickup.TextColor3 = Color3.fromRGB(0, 0, 0)
                FastPickup.TextSize = 16.000
                FastPickup.TextWrapped = true
        
                FullBrightButton.Name = "Full Bright Button"
                FullBrightButton.Parent = FrameImage
                FullBrightButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                FullBrightButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                FullBrightButton.Position = UDim2.new(0.406311631, 0, 0.359509528, 0)
                FullBrightButton.Size = UDim2.new(0, 24, 0, 23)
                FullBrightButton.Font = Enum.Font.SourceSans
                FullBrightButton.Text = ""
                FullBrightButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                FullBrightButton.TextSize = 14.000
        
                FullBright.Name = "Full Bright"
                FullBright.Parent = FullBrightButton
                FullBright.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                FullBright.BackgroundTransparency = 1.000
                FullBright.Position = UDim2.new(0.208333686, 0, 0.0869570002, 0)
                FullBright.Size = UDim2.new(0, 109, 0, 20)
                FullBright.Font = Enum.Font.SourceSans
                FullBright.Text = "Fullbright"
                FullBright.TextColor3 = Color3.fromRGB(0, 0, 0)
                FullBright.TextSize = 16.000
                FullBright.TextWrapped = true
        
                HBEButton.Name = "HBE Button"
                HBEButton.Parent = FrameImage
                HBEButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                HBEButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                HBEButton.Position = UDim2.new(0.406311631, 0, 0.241387978, 0)
                HBEButton.Size = UDim2.new(0, 24, 0, 23)
                HBEButton.Font = Enum.Font.SourceSans
                HBEButton.Text = ""
                HBEButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                HBEButton.TextSize = 14.000
        
                HBE.Name = "HBE"
                HBE.Parent = HBEButton
                HBE.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                HBE.BackgroundTransparency = 1.000
                HBE.Position = UDim2.new(-0.374999762, 0, 0.0434787385, 0)
                HBE.Size = UDim2.new(0, 109, 0, 20)
                HBE.Font = Enum.Font.SourceSans
                HBE.Text = "HBE "
                HBE.TextColor3 = Color3.fromRGB(0, 0, 0)
                HBE.TextSize = 16.000
                HBE.TextWrapped = true
        
                InfstamButton.Name = "Inf stam Button"
                InfstamButton.Parent = FrameImage
                InfstamButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                InfstamButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                InfstamButton.Position = UDim2.new(0.0315581858, 0, 0.363503307, 0)
                InfstamButton.Size = UDim2.new(0, 24, 0, 23)
                InfstamButton.Font = Enum.Font.SourceSans
                InfstamButton.Text = ""
                InfstamButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                InfstamButton.TextSize = 14.000
        
                InfiniteStamina.Name = "Infinite Stamina"
                InfiniteStamina.Parent = InfstamButton
                InfiniteStamina.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                InfiniteStamina.BackgroundTransparency = 1.000
                InfiniteStamina.Position = UDim2.new(0.999999881, 0, 0.0434783101, 0)
                InfiniteStamina.Size = UDim2.new(0, 101, 0, 20)
                InfiniteStamina.Font = Enum.Font.SourceSans
                InfiniteStamina.Text = "Infinite Stamina"
                InfiniteStamina.TextColor3 = Color3.fromRGB(0, 0, 0)
                InfiniteStamina.TextSize = 16.000
                InfiniteStamina.TextWrapped = true
        
                NoRecoilbutton.Name = "No Recoil button"
                NoRecoilbutton.Parent = FrameImage
                NoRecoilbutton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                NoRecoilbutton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                NoRecoilbutton.Position = UDim2.new(0.0315581858, 0, 0.747164607, 0)
                NoRecoilbutton.Size = UDim2.new(0, 24, 0, 23)
                NoRecoilbutton.Font = Enum.Font.SourceSans
                NoRecoilbutton.Text = ""
                NoRecoilbutton.TextColor3 = Color3.fromRGB(0, 0, 0)
                NoRecoilbutton.TextSize = 14.000
        
                NoRecoil.Name = "No Recoil"
                NoRecoil.Parent = NoRecoilbutton
                NoRecoil.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                NoRecoil.BackgroundTransparency = 1.000
                NoRecoil.Position = UDim2.new(0.333333224, 0, 0.0434783176, 0)
                NoRecoil.Size = UDim2.new(0, 101, 0, 20)
                NoRecoil.Font = Enum.Font.SourceSans
                NoRecoil.Text = "No Recoil"
                NoRecoil.TextColor3 = Color3.fromRGB(0, 0, 0)
                NoRecoil.TextSize = 16.000
                NoRecoil.TextWrapped = true
        
                SafeESPButton.Name = "Safe ESP Button"
                SafeESPButton.Parent = FrameImage
                SafeESPButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                SafeESPButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                SafeESPButton.Position = UDim2.new(0.0315581858, 0, 0.620635152, 0)
                SafeESPButton.Size = UDim2.new(0, 24, 0, 23)
                SafeESPButton.Font = Enum.Font.SourceSans
                SafeESPButton.Text = ""
                SafeESPButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                SafeESPButton.TextSize = 14.000
        
                SafeESP.Name = "Safe ESP"
                SafeESP.Parent = SafeESPButton
                SafeESP.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                SafeESP.BackgroundTransparency = 1.000
                SafeESP.Position = UDim2.new(0, 0, 0.043478258, 0)
                SafeESP.Size = UDim2.new(0, 109, 0, 20)
                SafeESP.Font = Enum.Font.SourceSans
                SafeESP.Text = "Safe ESP"
                SafeESP.TextColor3 = Color3.fromRGB(0, 0, 0)
                SafeESP.TextSize = 16.000
                SafeESP.TextWrapped = true
        
                scrapespButton.Name = "scrap esp Button"
                scrapespButton.Parent = FrameImage
                scrapespButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                scrapespButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                scrapespButton.Position = UDim2.new(0.0315581858, 0, 0.492346764, 0)
                scrapespButton.Size = UDim2.new(0, 24, 0, 23)
                scrapespButton.Font = Enum.Font.SourceSans
                scrapespButton.Text = ""
                scrapespButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                scrapespButton.TextSize = 14.000
        
                ScrapESP.Name = "Scrap ESP"
                ScrapESP.Parent = scrapespButton
                ScrapESP.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ScrapESP.BackgroundTransparency = 1.000
                ScrapESP.Position = UDim2.new(0.291666538, 0, 4.84287739e-08, 0)
                ScrapESP.Size = UDim2.new(0, 101, 0, 20)
                ScrapESP.Font = Enum.Font.SourceSans
                ScrapESP.Text = "Scrap ESP"
                ScrapESP.TextColor3 = Color3.fromRGB(0, 0, 0)
                ScrapESP.TextSize = 16.000
                ScrapESP.TextWrapped = true
        
                Verison.Name = "Verison"
                Verison.Parent = FrameImage
                Verison.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Verison.BackgroundTransparency = 1.000
                Verison.Position = UDim2.new(0.761333168, 0, 0.0942808166, 0)
                Verison.Size = UDim2.new(0, 200, 0, 50)
                Verison.Font = Enum.Font.Michroma
                Verison.Text = "V3"
                Verison.TextColor3 = Color3.fromRGB(0, 0, 0)
                Verison.TextSize = 14.000
        
                Tittle.Name = "Tittle"
                Tittle.Parent = FrameImage
                Tittle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Tittle.BackgroundTransparency = 1.000
                Tittle.Position = UDim2.new(-0.0131332083, 0, 0.0269562043, 0)
                Tittle.Size = UDim2.new(0, 132, 0, 22)
                Tittle.Font = Enum.Font.SourceSans
                Tittle.Text = "Legitinality "
                Tittle.TextColor3 = Color3.fromRGB(255, 255, 255)
                Tittle.TextScaled = true
                Tittle.TextSize = 20.000
                Tittle.TextWrapped = true
        
                KeybindFrame.Name = "Keybind Frame"
                KeybindFrame.Parent = FrameImage
                KeybindFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                KeybindFrame.BackgroundTransparency = 1.000
                KeybindFrame.Position = UDim2.new(0.697662115, 0, 0.308383226, 0)
                KeybindFrame.Size = UDim2.new(0, 127, 0, 127)
                KeybindFrame.Image = "http://www.roblox.com/asset/?id=5838817871"
        
                Keybinds.Name = "Keybinds"
                Keybinds.Parent = KeybindFrame
                Keybinds.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Keybinds.BackgroundTransparency = 1.000
                Keybinds.Position = UDim2.new(-0.275590539, 0, 0.14173229, 0)
                Keybinds.Size = UDim2.new(0, 200, 0, 50)
                Keybinds.Font = Enum.Font.Nunito
                Keybinds.Text = "Keybinds"
                Keybinds.TextColor3 = Color3.fromRGB(0, 0, 0)
                Keybinds.TextSize = 21.000
        
                Keybinds_2.Name = "Keybinds"
                Keybinds_2.Parent = KeybindFrame
                Keybinds_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Keybinds_2.BackgroundTransparency = 1.000
                Keybinds_2.Position = UDim2.new(-0.275590539, 0, 0.299212605, 0)
                Keybinds_2.Size = UDim2.new(0, 200, 0, 50)
                Keybinds_2.Font = Enum.Font.Nunito
                Keybinds_2.Text = "Y - Aimlock"
                Keybinds_2.TextColor3 = Color3.fromRGB(0, 0, 0)
                Keybinds_2.TextSize = 15.000
        
                Keybinds_3.Name = "Keybinds"
                Keybinds_3.Parent = KeybindFrame
                Keybinds_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Keybinds_3.BackgroundTransparency = 1.000
                Keybinds_3.Position = UDim2.new(-0.275590539, 0, 0.480315, 0)
                Keybinds_3.Size = UDim2.new(0, 200, 0, 50)
                Keybinds_3.Font = Enum.Font.Nunito
                Keybinds_3.Text = "T - HBE"
                Keybinds_3.TextColor3 = Color3.fromRGB(0, 0, 0)
                Keybinds_3.TextSize = 15.000
        
                Keybinds_4.Name = "Keybinds"
                Keybinds_4.Parent = KeybindFrame
                Keybinds_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Keybinds_4.BackgroundTransparency = 1.000
                Keybinds_4.Position = UDim2.new(-0.275590539, 0, 0.661417365, 0)
                Keybinds_4.Size = UDim2.new(0, 200, 0, 50)
                Keybinds_4.Font = Enum.Font.Nunito
                Keybinds_4.Text = "Z - GUI"
                Keybinds_4.TextColor3 = Color3.fromRGB(0, 0, 0)
                Keybinds_4.TextSize = 15.000
        
                Message.Name = "Message"
                Message.Parent = FrameImage
                Message.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Message.BackgroundTransparency = 1.000
                Message.Position = UDim2.new(0.474671692, 0, 0.0269462466, 0)
                Message.Size = UDim2.new(0, 153, 0, 20)
                Message.Font = Enum.Font.SourceSans
                Message.Text = "Created By Venomous"
                Message.TextColor3 = Color3.fromRGB(255, 255, 255)
                Message.TextScaled = true
                Message.TextSize = 14.000
                Message.TextWrapped = true
        
                X.Name = "X"
                X.Parent = FrameImage
                X.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                X.BackgroundTransparency = 1.000
                X.Position = UDim2.new(0.93433398, 0, 0.0269462448, 0)
                X.Size = UDim2.new(0, 24, 0, 20)
                X.Font = Enum.Font.SourceSans
                X.Text = ""
                X.TextColor3 = Color3.fromRGB(0, 0, 0)
                X.TextSize = 14.000
        
                X_2.Name = "X"
                X_2.Parent = FrameImage
                X_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                X_2.BackgroundTransparency = 1.000
                X_2.Position = UDim2.new(0.885553479, 0, 0.329341412, 0)
                X_2.Size = UDim2.new(0, 17, 0, 19)
                X_2.Font = Enum.Font.SourceSans
                X_2.Text = ""
                X_2.TextColor3 = Color3.fromRGB(0, 0, 0)
                X_2.TextSize = 14.000
        
                WarningImage.Name = "Warning Image"
                WarningImage.Parent = FrameImage
                WarningImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                WarningImage.BackgroundTransparency = 1.000
                WarningImage.Position = UDim2.new(0.030018758, 0, 0.883233428, 0)
                WarningImage.Size = UDim2.new(0, 25, 0, 25)
                WarningImage.Image = "http://www.roblox.com/asset/?id=5631336371"
        
                WarningText.Name = "Warning Text"
                WarningText.Parent = FrameImage
                WarningText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                WarningText.BackgroundTransparency = 1.000
                WarningText.Position = UDim2.new(0.0300187618, 0, 0.844311357, 0)
                WarningText.Size = UDim2.new(0, 200, 0, 50)
                WarningText.Font = Enum.Font.SourceSans
                WarningText.Text = "Be Smart Dont Get Caught"
                WarningText.TextColor3 = Color3.fromRGB(0, 0, 0)
                WarningText.TextSize = 14.000
        
                -- doing this so the code at the bottom doesnt look like shit
                local NameResolve = {
                    ESP = "ESP Button",
                    InfStamina = "Inf stam Button",
                    NoFall = "Fall Damage",
                    FastPickup = "fast pickup Button",
                    NoRecoil = "No Recoil button",
                    FullBright = "Full Bright Button",
                    ScrapESP = "scrap esp Button",
                    HBE = "HBE Button",
                    SafeESP = "Safe ESP Button",
                    DealerESP = "Dealer ESP Button"
                }
        
                local settings =
                    setmetatable(
                    {},
                    {
                        __index = function(tab, idx)
                            assert(NameResolve[idx], "ayo invalid setting")
                            return FrameImage[NameResolve[idx]].BackgroundColor3.G == 1
                        end
                    }
                )
        
                local function DXEAPY_fake_script() -- FrameImage.LocalScript
                    local script = Instance.new("LocalScript", FrameImage)
        
                    player = game.Players.LocalPlayer
        
                    player:GetMouse().KeyDown:Connect(
                        function(key)
                            if key == "z" and script.Parent.Visible == false then
                                script.Parent.Visible = true
                            else
                                if key == "z" and script.Parent.Visible == true then
                                    script.Parent.Visible = false
                                end
                            end
                        end
                    )
                end
        
                coroutine.wrap(DXEAPY_fake_script)()
                local function ADJT_fake_script() -- DealerESPButton.LocalScript
                    local script = Instance.new("LocalScript", DealerESPButton)
        
                    local toggle = false
                    script.Parent.MouseButton1Down:connect(
                        function()
                            if toggle == true then
                                toggle = false
                            else
                                toggle = true
                            end
                            if toggle == true then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                            end
                            if toggle == false then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                            end
        
                            if toggle == true then
                            --true here
                            end
                            if toggle == false then
                            --false here
                            end
                        end
                    )
                end
                coroutine.wrap(ADJT_fake_script)()
                local function YMUUKK_fake_script() -- ESPButton.LocalScript
                    local script = Instance.new("LocalScript", ESPButton)
        
                    local toggle = false
                    script.Parent.MouseButton1Down:connect(
                        function()
                            if toggle == true then
                                toggle = false
                            else
                                toggle = true
                            end
                            if toggle == true then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                            end
                            if toggle == false then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                            end
        
                            if toggle == true then
                            --true here
                            end
                            if toggle == false then
                            --false here
                            end
                        end
                    )
                end
        
                local NoFall = settings.NoFall -- seriously, fuck you roblox engine
        
                coroutine.wrap(YMUUKK_fake_script)()
                local function ALIQB_fake_script() -- FallDamage.LocalScript
                    local script = Instance.new("LocalScript", FallDamage)
        
                    local toggle = false
                    script.Parent.MouseButton1Down:connect(
                        function()
                            NoFall = not NoFall
                            if toggle == true then
                                toggle = false
                            else
                                toggle = true
                            end
                            if toggle == true then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                            end
                            if toggle == false then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                            end
        
                            if toggle == true then
                            --true here
                            end
                            if toggle == false then
                            --false here
                            end
                        end
                    )
                end
        
                local InstantInteract = settings.FastPickup
        
                coroutine.wrap(ALIQB_fake_script)()
                local function ILYVRAX_fake_script() -- fastpickupButton.LocalScript
                    local script = Instance.new("LocalScript", fastpickupButton)
        
                    local toggle = false
                    script.Parent.MouseButton1Down:connect(
                        function()
                            InstantInteract = not InstantInteract
                            if toggle == true then
                                toggle = false
                            else
                                toggle = true
                            end
                            if toggle == true then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                            end
                            if toggle == false then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                            end
        
                            if toggle == true then
                            --true here
                            end
                            if toggle == false then
                            --false here
                            end
                        end
                    )
                end
        
                local FullBright = settings.FullBright
        
                coroutine.wrap(ILYVRAX_fake_script)()
                local function BVRY_fake_script() -- FullBrightButton.LocalScript
                    local script = Instance.new("LocalScript", FullBrightButton)
        
                    local toggle = false
                    script.Parent.MouseButton1Down:connect(
                        function()
                            FullBright = not FullBright -- a decent toggle? what? just one line? is it really that simple? nooooooo, no way, thats bad coding
                            if toggle == true then
                                toggle = false
                            else
                                toggle = true
                            end
                            if toggle == true then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                            end
                            if toggle == false then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                            end
        
                            if toggle == true then
                            --true here
                            end
                            if toggle == false then
                            --false here
                            end
                        end
                    )
                end
                coroutine.wrap(BVRY_fake_script)()
                local function CJMZZOQ_fake_script() -- HBEButton.LocalScript
                    local script = Instance.new("LocalScript", HBEButton)
        
                    script.Parent.MouseButton1Down:connect(
                        function()
                            FrameImage[NameResolve.HBE].BackgroundColor3 =
                                settings.HBE and Color3.fromRGB(0, 0, 128) or Color3.fromRGB(0, 255, 0)
                        end
                    )
                end
        
                local InfStamina = settings.InfStamina -- my favorite game engine is roblox <3
        
                coroutine.wrap(CJMZZOQ_fake_script)()
                local function VCBG_fake_script() -- InfstamButton.LocalScript
                    local script = Instance.new("LocalScript", InfstamButton)
        
                    local toggle = false
                    script.Parent.MouseButton1Down:connect(
                        function()
                            InfStamina = not InfStamina -- would you look at that, decent code
                            if toggle == true then
                                toggle = false
                            else
                                toggle = true
                            end
                            if toggle == true then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                            end
                            if toggle == false then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                            end
        
                            if toggle == true then
                            --true here
                            end
                            if toggle == false then
                            --false here
                            end
                        end
                    )
                end
        
                local NoRecoil = settings.NoRecoil
                coroutine.wrap(VCBG_fake_script)()
                local function DRBL_fake_script() -- NoRecoilbutton.LocalScript
                    local script = Instance.new("LocalScript", NoRecoilbutton)
        
                    local toggle = false
                    script.Parent.MouseButton1Down:connect(
                        function()
                            NoRecoil = not NoRecoil
                            if toggle == true then
                                toggle = false
                            else
                                toggle = true
                            end
                            if toggle == true then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                            end
                            if toggle == false then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                            end
        
                            if toggle == true then
                            --true here
                            end
                            if toggle == false then
                            --false here
                            end
                        end
                    )
                end
                coroutine.wrap(DRBL_fake_script)()
                local function MTDYQB_fake_script() -- SafeESPButton.LocalScript
                    local script = Instance.new("LocalScript", SafeESPButton)
        
                    local toggle = false
                    script.Parent.MouseButton1Down:connect(
                        function()
                            if toggle == true then
                                toggle = false
                            else
                                toggle = true
                            end
                            if toggle == true then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                            end
                            if toggle == false then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                            end
        
                            if toggle == true then
                            --true here
                            end
                            if toggle == false then
                            --false here
                            end
                        end
                    )
                end
                coroutine.wrap(MTDYQB_fake_script)()
                local function WXXAND_fake_script() -- scrapespButton.LocalScript
                    local script = Instance.new("LocalScript", scrapespButton)
        
                    local toggle = false
                    script.Parent.MouseButton1Down:connect(
                        function()
                            if toggle == true then
                                toggle = false
                            else
                                toggle = true
                            end
                            if toggle == true then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                            end
                            if toggle == false then
                                script.Parent.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
                            end
        
                            if toggle == true then
                            --true here
                            end
                            if toggle == false then
                            --false here
                            end
                        end
                    )
                end
                coroutine.wrap(WXXAND_fake_script)()
        
                -- scripts here :)
        
                _G.BPartSize = Vector3.new(4.5, 4.5, 4.5)
        
                _G.FullBrightColor = Color3.new(1, 1, 1)
        
                _G.scalingFactor = 3000
        
                _G.HBEToggleKey = Enum.KeyCode.T -- change to whatever
        
                _G.LoopActive = true
        
                local LPlayer = game:GetService("Players").LocalPlayer
                local LocalMouse = LPlayer:GetMouse()
        
                local UserInputService = game:GetService("UserInputService")
                local TS = game:GetService("TweenService")
        
                local camera = workspace.CurrentCamera
        
                repeat
                    wait(0.001)
                until game:IsLoaded() and game.Players.LocalPlayer.Character -- waits until youve loaded in
        
                local rcFunction
                for iter = 1, 10 do
                    for i, v in next, getgc(true) do
                        if (type(v) == "table" and type(rawget(v, "lol")) == "function" and getinfo(v.lol).source:find(".RCHB")) then
                            rcFunction = v.lol
                            break
                        end
                    end
                    if rcFunction then
                        break
                    end
                    wait(0.1)
                end
        
                local grcFunction
                for iter = 1, 10 do
                    for i, v in next, getgc(true) do
                        if (type(v) == "table" and type(rawget(v, "ONRH_S4")) == "function") then
                            grcFunction = v.ONRH_S4
                            break
                        end
                    end
                    if grcFunction then
                        break
                    end
                    wait(0.1)
                end
        
                local numberT = 20
        
                if (rcFunction) then
                    for i, v in next, getconstants(rcFunction) do
                        if (v == 1.75 or v == 10) then
                            setconstant(rcFunction, i, numberT)
                        end
                    end
                else
                    warn(
                        "Failed to get a crucial function for the melee HBE unpatcher, therefore it won't work, please contact the retard that made this script"
                    )
                end
        
                if (grcFunction) then
                    for i, v in next, getconstants(grcFunction) do
                        if (v == 1.5 or v == 10) then
                            setconstant(grcFunction, i, numberT)
                        end
                    end
                else
                    warn(
                        "Failed to get a crucial function for the gun HBE unpatcher, therefore it won't work, please contact the retard that made this script"
                    )
                end
        
                local DefHeadSize = game.Players.LocalPlayer.Character:WaitForChild("Head").Size
        
                local Lighting = game.Lighting
                local DefaultAmbient = Lighting.Ambient
        
                local oldIndex
                oldIndex =
                    hookmetamethod(
                    game,
                    "__index",
                    newcclosure(
                        function(...) -- future proofing
                            local tab, key = ...
                            if (tab == nil or type(tab) ~= "userdata" or key == nil) then --incase we want to change the args in the future
                                return oldIndex(...)
                            end
                            if (not checkcaller() and oldIndex(tab, "ClassName") == "Part" and key == "Size") then
                                if (oldIndex(tab, "Name") == "Head") then
                                    return DefHeadSize
                                end
                            end
                            return oldIndex(...)
                        end
                    )
                )
        
                local oldNewIndex
                oldNewIndex =
                    hookmetamethod(
                    game,
                    "__newindex",
                    newcclosure(
                        function(...)
                            if (not checkcaller()) then
                                local tab, key, value = ...
                                if (tab == Lighting and key == "Ambient") then
                                    return oldNewIndex(tab, key, FullBright and _G.FullBrightColor or DefaultAmbient) -- because i remember the retard having that shit be put inside of a frame hook
                                end
                            end
                            return oldNewIndex(...)
                        end
                    )
                )
        
                local fMain
                local fMainDo
                for i, v in next, getgc() do
                    if (type(v) == "function" and getinfo(v).source:find(".PlayerScripts.")) then
                        if (getinfo(v).name == "Main") then
                            fMain = v
                        elseif
                            (getinfo(v).name == "MainDo" and
                                ({
                                    pcall(
                                        function()
                                            getproto(v, 3)
                                        end
                                    )
                                })[1])
                         then -- for extra certainty, there is nothing like this for the other function because i cba and i spent alot of time reversing this function
                            fMainDo = v
                        end
                        if (fMain and fMainDo) then
                            break
                        end
                    end
                end
        
                if (fMainDo and fMain) then
                    local oldMainDo
                    oldMainDo =
                        hookfunction(
                        fMainDo,
                        function(InputObject, ...)
                            if (InstantInteract) then
                                local InteractTable = getupvalue(fMain, 2) -- yes indeed, i couldve used the proto from MainDo but i forgor that you had to make the last arg true to get upvalues from it
                                if (type(InteractTable) == "table" and type(InteractTable[InputObject.KeyCode]) == "table") then
                                    InteractTable[InputObject.KeyCode][2] = 0
                                end
                            end
                            return oldMainDo(InputObject, ...)
                        end
                    )
                else
                    warn(
                        "Failed to get crucial functions for InstantInteract, therefore it won't work, please contact the retard that made this script"
                    )
                end
        
                local oldSpawn
                oldSpawn =
                    hookfunction(
                    getrenv().spawn,
                    function(...)
                        if (NoRecoil and not checkcaller() and debug.getinfo(({...})[1], "n").name == "lioceRCamera") then
                            return
                        end
                        return oldSpawn(...)
                    end
                )
        
                -- niche utility functions
                local function MatchBegin(inputString, matchString)
                    return inputString:sub(1, #matchString) == matchString
                end
        
                -- retarded esp shit goes here because im not using my esp lib ;)
        
                local function ApplySettings(obj, tab) -- so that one weird kid on discord can edit the visuals without bothering me (he'll still probably fuck it up)
                    for i, v in next, tab do
                        obj[i] = v
                    end
                end
        
                local sizingFactor = 3.5
                local PlayerESPBoxes = {
                    Thickness = 0.6,
                    Visible = false,
                    Color = Color3.new(1, 1, 1),
                    Filled = false
                }
        
                local PlayerESPNames = {
                    Color = Color3.new(1, 1, 1),
                    Outline = true,
                    Font = 3,
                    Size = 16,
                    Center = false,
                    Visible = false, -- these 2 don't matter, they get overwritten
                    Position = Vector2.new()
                    -- you can change fonts in here as well
                }
        
                local PlayerESPHealth = {
                    -- (same shit as above)
                    Color = Color3.new(1, 1, 1),
                    Outline = true,
                    Size = 15,
                    Font = 3,
                    Size = 15,
                    Center = false,
                    Visible = false, -- these 2 don't matter, they get overwritten
                    Position = Vector2.new()
                    -- you can change fonts in here as well
                }
        
                local PlayerESPTool = {
                    -- (same shit as above)
                    Color = Color3.new(218 / 255, 165 / 255, 32 / 255), -- fromRGB who?
                    Outline = true,
                    Size = 18,
                    Center = false,
                    Visible = false, -- these 2 don't matter, they get overwritten
                    Position = Vector2.new()
                    -- you can change fonts in here as well
                }
        
                local PlayerESP = {
                    box = {
                        [1] = Drawing.new("Square"), -- tbh this has stuck around from the first time i made the esp, cba to change it now
                        Created = 1,
                        Active = 0
                    },
                    name = {
                        [1] = Drawing.new("Text"),
                        Created = 1,
                        Active = 0
                    },
                    health = {
                        [1] = Drawing.new("Text"),
                        Created = 1,
                        Active = 0
                    },
                    tool = {
                        [1] = Drawing.new("Text"),
                        Created = 1,
                        Active = 0
                    }
                }
        
                ApplySettings(PlayerESP.box[1], PlayerESPBoxes)
                ApplySettings(PlayerESP.name[1], PlayerESPNames)
                ApplySettings(PlayerESP.health[1], PlayerESPHealth)
        
                local WorldESPScrap = {
                    Color = Color3.new(1, 1, 1),
                    Outline = true,
                    Size = 15,
                    Center = true,
                    Visible = false,
                    Text = "Scrap", -- you can safely change this if you want
                    Position = Vector2.new()
                    -- you can change fonts in here as well
                }
        
                local WorldESPSafe = {
                    Color = Color3.new(1, 1, 1), -- this gets overwritten, incase something goes wrong atleast it'll have a decent default color
                    Outline = true,
                    Size = 15,
                    Center = true,
                    Visible = false,
                    Position = Vector2.new()
                    -- you can change fonts in here as well
                }
        
                local DealerESPBoxes = {
                    Thickness = 1.5,
                    Visible = false,
                    Color = Color3.new(0, 0, 128),
                    Filled = false
                }
        
                local WorldESP = {
                    Scrap = {
                        [1] = Drawing.new("Text"),
                        Created = 1,
                        Active = 0
                    },
                    Safe = {
                        [1] = Drawing.new("Text"),
                        Created = 1,
                        Active = 0
                    },
                    Dealer = {
                        [1] = Drawing.new("Square"),
                        Created = 1,
                        Active = 0
                    }
                }
                ApplySettings(WorldESP.Scrap[1], WorldESPScrap)
                ApplySettings(WorldESP.Safe[1], WorldESPSafe)
                ApplySettings(WorldESP.Dealer[1], DealerESPBoxes)
        
                local GamePlayers = game:GetService("Players") -- the Players object can have its name changed, though ive personally never had issues accessing players via game.Players when the name has been changed, its safer this way (incase something in the roblox engine changes)
                game:GetService("RunService").RenderStepped:Connect(
                    function(frameDelta)
                        PlayerESP.box.Active = 0 -- incase the retard asks to seperate the visuals into different settings
                        PlayerESP.name.Active = 0
                        PlayerESP.health.Active = 0
                        PlayerESP.tool.Active = 0
                        WorldESP.Scrap.Active = 0
                        WorldESP.Safe.Active = 0
                        WorldESP.Dealer.Active = 0
        
                        if (settings.ESP) then
                            for i, v in next, GamePlayers:GetPlayers() do
                                if
                                    v == LPlayer or
                                        not (v.Character and v.Character:FindFirstChild("HumanoidRootPart") and
                                            v.Character:FindFirstChild("Head") and
                                            v.Character:FindFirstChildOfClass("Humanoid") and
                                            math.floor(v.Character:FindFirstChildOfClass("Humanoid").Health) > 0)
                                 then
                                continue
                                end
        
                                PlayerESP.box.Active = PlayerESP.box.Active + 1
                                PlayerESP.name.Active = PlayerESP.name.Active + 1
                                PlayerESP.health.Active = PlayerESP.health.Active + 1
                                PlayerESP.tool.Active = PlayerESP.tool.Active + 1
        
                                if (not PlayerESP.box[PlayerESP.box.Active]) then
                                    PlayerESP.box[PlayerESP.box.Active] = Drawing.new("Square")
                                    ApplySettings(PlayerESP.box[PlayerESP.box.Active], PlayerESPBoxes)
                                    PlayerESP.box.Created = PlayerESP.box.Created + 1
                                end
                                if (not PlayerESP.name[PlayerESP.name.Active]) then
                                    PlayerESP.name[PlayerESP.name.Active] = Drawing.new("Text")
                                    ApplySettings(PlayerESP.name[PlayerESP.name.Active], PlayerESPNames)
                                    PlayerESP.name.Created = PlayerESP.name.Created + 1
                                end
                                if (not PlayerESP.health[PlayerESP.health.Active]) then
                                    PlayerESP.health[PlayerESP.health.Active] = Drawing.new("Text")
                                    ApplySettings(PlayerESP.health[PlayerESP.health.Active], PlayerESPHealth)
                                    PlayerESP.health.Created = PlayerESP.health.Created + 1
                                end
                                if (not PlayerESP.tool[PlayerESP.tool.Active]) then
                                    PlayerESP.tool[PlayerESP.tool.Active] = Drawing.new("Text")
                                    ApplySettings(PlayerESP.tool[PlayerESP.tool.Active], PlayerESPTool)
                                    PlayerESP.tool.Created = PlayerESP.tool.Created + 1
                                end
        
                                local TopPoint = camera:WorldToViewportPoint(v.Character.Head.Position + Vector3.new(0, 1, 0))
                                local BottomPoint =
                                    camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position - Vector3.new(0, 3, 0))
                                if (TopPoint.Z > 0 and BottomPoint.Z > 0) then
                                    local DeltaPosition = TopPoint - BottomPoint
                                    PlayerESP.box[PlayerESP.box.Active].Visible = true
                                    PlayerESP.box[PlayerESP.box.Active].Position =
                                        Vector2.new(TopPoint.X - (DeltaPosition.Y / sizingFactor), TopPoint.Y)
                                    PlayerESP.box[PlayerESP.box.Active].Size =
                                        Vector2.new((DeltaPosition.Y / sizingFactor) * 2, -DeltaPosition.Y)
        
                                    local indent = math.ceil(PlayerESP.box[PlayerESP.box.Active].Thickness / 2) + 2 -- so thicknes can be safely edited
        
                                    PlayerESP.name[PlayerESP.name.Active].Visible = true
                                    PlayerESP.name[PlayerESP.name.Active].Text = v.Name
                                    PlayerESP.name[PlayerESP.name.Active].Position =
                                        Vector2.new(
                                        PlayerESP.box[PlayerESP.box.Active].Position.X + indent,
                                        PlayerESP.box[PlayerESP.box.Active].Position.Y -
                                            PlayerESP.name[PlayerESP.name.Active].TextBounds.Y * 0.25
                                    )
        
                                    local healthRatio =
                                        v.Character:FindFirstChildOfClass("Humanoid").Health /
                                        v.Character:FindFirstChildOfClass("Humanoid").MaxHealth
                                    PlayerESP.health[PlayerESP.health.Active].Visible = true
                                    PlayerESP.health[PlayerESP.health.Active].Text =
                                        "Health: " .. tostring(math.floor(v.Character:FindFirstChildOfClass("Humanoid").Health))
                                    PlayerESP.health[PlayerESP.health.Active].Color =
                                        Color3.new(1 - healthRatio, healthRatio, 0)
                                    PlayerESP.health[PlayerESP.health.Active].Position =
                                        Vector2.new(
                                        PlayerESP.box[PlayerESP.box.Active].Position.X + indent,
                                        PlayerESP.box[PlayerESP.box.Active].Position.Y +
                                            PlayerESP.name[PlayerESP.name.Active].TextBounds.Y * 0.5 +
                                            1 -
                                            PlayerESP.health[PlayerESP.health.Active].TextBounds.Y * 0.25
                                    )
        
                                    if (v.Character:FindFirstChildOfClass("Tool")) then
                                        PlayerESP.tool[PlayerESP.tool.Active].Visible = true
                                        PlayerESP.tool[PlayerESP.tool.Active].Text =
                                            v.Character:FindFirstChildOfClass("Tool").Name
                                        PlayerESP.tool[PlayerESP.tool.Active].Position =
                                            Vector2.new(
                                            PlayerESP.box[PlayerESP.box.Active].Position.X + indent,
                                            PlayerESP.health[PlayerESP.health.Active].Position.Y +
                                                PlayerESP.health[PlayerESP.health.Active].TextBounds.Y * 0.75 +
                                                1 -
                                                PlayerESP.tool[PlayerESP.tool.Active].TextBounds.Y * 0.25
                                        )
                                    else
                                        PlayerESP.tool[PlayerESP.tool.Active].Visible = false
                                    end
                                else -- either this or doing the same thing below with an additional re-iteration of the table
                                    PlayerESP.box[PlayerESP.box.Active].Visible = false
                                    PlayerESP.name[PlayerESP.name.Active].Visible = false
                                    PlayerESP.health[PlayerESP.health.Active].Visible = false
                                    PlayerESP.tool[PlayerESP.tool.Active].Visible = false
                                end
                            end
                        end
                        if (PlayerESP.box.Created > PlayerESP.box.Active) then
                            for i = 1, PlayerESP.box.Created - PlayerESP.box.Active, 1 do
                                PlayerESP.box[PlayerESP.box.Active + i].Visible = false
                            end
                        end
                        if (PlayerESP.name.Created > PlayerESP.name.Active) then
                            for i = 1, PlayerESP.name.Created - PlayerESP.name.Active, 1 do
                                PlayerESP.name[PlayerESP.name.Active + i].Visible = false
                            end
                        end
                        if (PlayerESP.health.Created > PlayerESP.health.Active) then
                            for i = 1, PlayerESP.health.Created - PlayerESP.health.Active, 1 do
                                PlayerESP.health[PlayerESP.health.Active + i].Visible = false
                            end
                        end
                        if (PlayerESP.tool.Created > PlayerESP.tool.Active) then
                            for i = 1, PlayerESP.tool.Created - PlayerESP.tool.Active, 1 do
                                PlayerESP.tool[PlayerESP.tool.Active + i].Visible = false
                            end
                        end
                        if (settings.ScrapESP) then
                            for i, v in next, workspace.Filter.SpawnedPiles:GetChildren() do
                                WorldESP.Scrap.Active = WorldESP.Scrap.Active + 1
                                if (not WorldESP.Scrap[WorldESP.Scrap.Active]) then
                                    WorldESP.Scrap[WorldESP.Scrap.Active] = Drawing.new("Text")
                                    ApplySettings(WorldESP.Scrap[WorldESP.Scrap.Active], WorldESPScrap)
                                    WorldESP.Scrap.Created = WorldESP.Scrap.Created + 1
                                end
        
                                ScreenPoint = camera:WorldToViewportPoint(v.PrimaryPart.Position)
                                if (ScreenPoint.Z > 0) then
                                    WorldESP.Scrap[WorldESP.Scrap.Active].Visible = true
                                    WorldESP.Scrap[WorldESP.Scrap.Active].Position = Vector2.new(ScreenPoint.X, ScreenPoint.Y)
                                    WorldESP.Scrap[WorldESP.Scrap.Active].Color =
                                        v.PrimaryPart:FindFirstChildOfClass("ParticleEmitter").Color.Keypoints[1].Value
                                else
                                    WorldESP.Scrap[WorldESP.Scrap.Active].Visible = false
                                end
                            end
                        end
                        if (WorldESP.Scrap.Created > WorldESP.Scrap.Active) then
                            for i = 1, WorldESP.Scrap.Created - WorldESP.Scrap.Active, 1 do
                                WorldESP.Scrap[WorldESP.Scrap.Active + i].Visible = false
                            end
                        end
        
                        if (settings.SafeESP) then
                            for i, v in next, workspace.Map.BredMakurz:GetChildren() do
                                if
                                    not (v:FindFirstChild("Values") and v.Values:FindFirstChild("Broken") and
                                        not v.Values.Broken.Value)
                                 then
                                continue
                                end
        
                                WorldESP.Safe.Active = WorldESP.Safe.Active + 1
                                if (not WorldESP.Safe[WorldESP.Safe.Active]) then
                                    WorldESP.Safe[WorldESP.Safe.Active] = Drawing.new("Text")
                                    ApplySettings(WorldESP.Safe[WorldESP.Safe.Active], WorldESPSafe)
                                    WorldESP.Safe.Created = WorldESP.Safe.Created + 1
                                end
        
                                ScreenPoint = camera:WorldToViewportPoint(v.PrimaryPart.Position)
                                if (ScreenPoint.Z > 0) then
                                    WorldESP.Safe[WorldESP.Safe.Active].Visible = true
                                    WorldESP.Safe[WorldESP.Safe.Active].Text =
                                        MatchBegin(v.Name, "Register") and "Register" or
                                        (MatchBegin(v.Name, "SmallSafe") and "SmallSafe" or
                                            (MatchBegin(v.Name, "MediumSafe") and "MediumSafe" or v.Name))
                                    WorldESP.Safe[WorldESP.Safe.Active].Position = Vector2.new(ScreenPoint.X, ScreenPoint.Y)
                                    WorldESP.Safe[WorldESP.Safe.Active].Color =
                                        (v.Values.Broken.Value and Color3.new(1, 0, 0) or Color3.new(1, 1, 1))
                                else
                                    WorldESP.Safe[WorldESP.Safe.Active].Visible = false
                                end
                            end
                        end
                        if (WorldESP.Safe.Created > WorldESP.Safe.Active) then
                            for i = 1, WorldESP.Safe.Created - WorldESP.Safe.Active, 1 do
                                WorldESP.Safe[WorldESP.Safe.Active + i].Visible = false
                            end
                        end
        
                        if (settings.DealerESP) then
                            for i, v in next, workspace.Map.Shopz:GetChildren() do
                                if not (v:IsA("Model") and v:FindFirstChildOfClass("Model")) then
                                continue
                                end
        
                                local DealerCharacter = v:FindFirstChildOfClass("Model")
        
                                if
                                    not (DealerCharacter:FindFirstChild("Head") and
                                        DealerCharacter:FindFirstChild("HumanoidRootPart"))
                                 then -- eh why not
                                continue
                                end
        
                                WorldESP.Dealer.Active = WorldESP.Dealer.Active + 1
                                if (not WorldESP.Dealer[WorldESP.Dealer.Active]) then
                                    WorldESP.Dealer[WorldESP.Dealer.Active] = Drawing.new("Square")
                                    ApplySettings(WorldESP.Dealer[WorldESP.Dealer.Active], DealerESPBoxes)
                                    WorldESP.Dealer.Created = WorldESP.Dealer.Created + 1
                                end
        
                                local TopPoint =
                                    camera:WorldToViewportPoint(DealerCharacter.Head.Position + Vector3.new(0, 1, 0))
                                local BottomPoint =
                                    camera:WorldToViewportPoint(
                                    DealerCharacter.HumanoidRootPart.Position - Vector3.new(0, 3, 0)
                                )
                                if (TopPoint.Z > 0 and BottomPoint.Z > 0) then
                                    local DeltaPosition = TopPoint - BottomPoint
                                    WorldESP.Dealer[WorldESP.Dealer.Active].Visible = true
                                    WorldESP.Dealer[WorldESP.Dealer.Active].Position =
                                        Vector2.new(TopPoint.X - (DeltaPosition.Y / sizingFactor), TopPoint.Y)
                                    WorldESP.Dealer[WorldESP.Dealer.Active].Size =
                                        Vector2.new((DeltaPosition.Y / sizingFactor) * 2, -DeltaPosition.Y)
                                end
                            end
                        end
                        if (WorldESP.Dealer.Created > WorldESP.Dealer.Active) then
                            for i = 1, WorldESP.Dealer.Created - WorldESP.Dealer.Active, 1 do
                                WorldESP.Dealer[WorldESP.Dealer.Active + i].Visible = false
                            end
                        end
                    end
                )
        
                local oldStamina
                oldStamina =
                    hookfunction(
                    getupvalue(getrenv()._G.S_Take, 2),
                    function(v1, ...)
                        if (InfStamina) then -- god damn the roblox engine is so shit
                            v1 = 0
                        end
                        return oldStamina(v1, ...)
                    end
                )
        
                local oldNamecall
                oldNamecall =
                    hookmetamethod(
                    game,
                    "__namecall",
                    newcclosure(
                        function(...)
                            if (not checkcaller() and getnamecallmethod() == "FireServer" and NoFall) then
                                local tab = ...
                                if (tostring(tab) == "__DFfDD") then
                                    return
                                end
                            end
        
                            return oldNamecall(...)
                        end
                    )
                )
        
                _G.instantLockpick = true
                local oldGB2Index
                oldGB2Index =
                    hookmetamethod(
                    Instance.new("Frame"),
                    "__index",
                    function(...)
                        local tab, idx = ...
                        if (tab == nil or type(tab) ~= "userdata" or idx == nil) then
                            return oldGB2Index(...)
                        end
                        if (not checkcaller() and _G.instantLockpick and (idx == "AbsolutePosition" or idx == "AbsoluteSize")) then
                            for i = 2, 4 do -- for safety/future proofing
                                if (getinfo(i).name == "collidesWith") then
                                    if (idx == "AbsolutePosition") then
                                        return Vector2.new()
                                    else
                                        return Vector2.new(1, 1)
                                    end
                                end
                            end
                        end
        
                        return oldGB2Index(...)
                    end
                )
        
                game.UserInputService.InputBegan:Connect(
                    function(InputObject)
                        if (InputObject.KeyCode == _G.HBEToggleKey) then
                            FrameImage[NameResolve.HBE].BackgroundColor3 =
                                settings.HBE and Color3.fromRGB(0, 0, 128) or Color3.fromRGB(0, 255, 0)
                        end
                    end
                )
        
                while _G.LoopActive do -- loop for unimportant shit
                    Lighting.Ambient = FullBright and _G.FullBrightColor or DefaultAmbient
                    for i, v in next, GamePlayers:GetPlayers() do
                        if
                            (v ~= LPlayer and v.Character and v.Character:FindFirstChild("Head") and
                                v.Character:FindFirstChild("Humanoid") and
                                v.Character:FindFirstChild("HumanoidRootPart"))
                         then
                            if (settings.HBE and v.Character.Head.Size ~= _G.BPartSize) then
                                v.Character.Head.Size = _G.BPartSize
                                v.Character.Head.Transparency = 0.5
                            elseif (not settings.HBE and v.Character.Head.Size == _G.BPartSize) then
                                v.Character.Head.Size = DefHeadSize
                                v.Character.Head.Transparency = 0
                            end
                        end
                    end
                    wait(0.001)
                end
            else
                while true do
                end
            end
        end
    end,
 })

 local Button = SecondTab:CreateButton({
    Name = "CrimSkid Hub",
    Callback = function()
        local DiscordLib = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/discord%20lib.txt")()

local win = DiscordLib:Window("Crim Skid V2")

local serv = win:Server("Crimskid V2", "")

local btns = serv:Channel("Personal Best")
local btnss = serv:Channel("Aimlocks")
local btnsss = serv:Channel("ESPS")
local btnssss = serv:Channel("Hubs")
local btnsssss = serv:Channel("Other")

--------------------------------------------1----------------------
btns:Button("Aimlock", function()
 loadstring(game:HttpGet("https://pastebin.com/raw/Tfey2JbA"))()
DiscordLib:Notification("Notification", "Prediction 100 Distance 100-1000. HOTKEY Q", "Okay!")
end)


btns:Button("FullBright", function()
loadstring(game:HttpGet("https://pastebin.com/raw/vMEADuA2"))()
end)

btns:Button("Vault + Cash Register Esp", function()
loadstring(game:HttpGet("https://pastebin.com/raw/wtpbN7dz"))()
end)
--2--
btnss:Button("Customizable Lock (The One I Use)", function()
loadstring(game:HttpGet("https://pastebin.com/raw/Tfey2JbA"))()
end)

btnss:Button("My Freinds Lock (OP)", function()
loadstring(game:HttpGet("https://controlc.com/raw/f34f3bce"))()
end)

btnss:Button("Rainbow Lock", function()
loadstring(game:HttpGet("https://pastebin.com/raw/SgTvDfd9"))()
end)

--3
------------------------------------------------------------------

btnsss:Button("Simple Box Esp (0x83)", function()
loadstring(game:HttpGet("https://pastebin.com/raw/TcFNCtdU"))()
end)

btnsss:Button("Name Esp", function()
loadstring(game:HttpGet("https://pastebin.com/raw/TcFNCtdU"))()
end)

btnsss:Button("Chams", function()
loadstring(game:HttpGet("https://pastebin.com/raw/TcFNCtdU"))()
end)

btnsss:Button("Vault + Cash Register Esp", function()
loadstring(game:HttpGet("https://pastebin.com/raw/wtpbN7dz"))()
end)

btnsss:Button("Wally Hub Esp", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/wally-rblx/roblox-scripts/main/criminality_esp.lua"))()
end)

btnsss:Button("Skeleton Esp", function()
loadstring(game:HttpGet("https://pastebin.com/raw/WQfTkiMW"))()
end)

btnsss:Button("Tracers And Names (Clean)", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/fernandoagoncalves/universal-esp/main/esp.lua", true))()
end)


--HUBS

---------------------------------------------------------------------

btnssss:Button("Temporal X v2.0.3", function()
loadstring(game:HttpGet("https://pastebin.com/raw/w2S8YyDt", true))()
end)

btnssss:Button("Owl Hub (Right Click)", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt"))();
end)

btnssss:Button("Esp And Aimbot (Cool Pro Hax)", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Blissful4992/Miscellaneous/main/UNIVERSAL.lua"))()
end)

btnssss:Button("Bliss Hub Esp", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Cornyllius/ESPs/main/BlissESP.lua", true))()
end)

btnssss:Button("Fates Esp Hub", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-esp/main/main.lua"))()
end)


--OTHERS
---------------------------------------------------------------------


btnsssss:Button("Die", function()
    game.Players.LocalPlayer.Character.Humanoid:Destroy()
end)
    
btnsssss:Button("Hitbox Expander", function()
loadstring(game:HttpGet("https://pastebin.com/dfx7Ckee"))()
end)

btnsssss:Button("FreeCam (Shift + P)", function()
loadstring(game:HttpGet("https://pastebin.com/1EVWf5mr"))()
end)

btnsssss:Button("RTX (Laggy for bad pcs)", function()
loadstring(game:HttpGet("https://pastebin.com/1EVWf5mr"))()
end)

btnsssss:Button("Freeze Urself", function()
loadstring(game:HttpGet("https://pastebin.com/CK1xGpBi"))()
end)

btnsssss:Button("Ctrl Tp (Doesnt Work)", function()
loadstring(game:HttpGet("https://pastebin.com/mwE1iva5"))()
end)

btnsssss:Button("Chat Spy", function()
loadstring(game:HttpGet("https://pastebin.com/ZQzw4tBr"))()
end)

btnsss:Button("Anti Admins (ENABLE)", function()
loadstring(game:HttpGet("https://pastebin.com/Xj8TFkqF"))()
end)

btnsss:Button("Chat Spy", function()
loadstring(game:HttpGet("https://pastebin.com/Xj8TFkqF"))()
end)
    end,
 })

 local Button = SecondTab:CreateButton({
    Name = "Phantom Forces Silent aim + esp",
    Callback = function()
         --// Made by @dementia enjoyer
--// Forgive me for the very shit code, gonna rewrite dis later and actually try to make it look good lol
--// join .gg/syAGdFKAZQ for updates and more scripts like this <3 \\--

local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'homohack (made by @eldmonstret / dementia enjoyer)',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

--// Defined

local Camera = workspace.CurrentCamera
local Players = workspace.Players
local Ignore = workspace.Ignore
local DeadBodies = workspace.Ignore.DeadBody
local Misc = Ignore.Misc

--// Roblox

local Vector3New = Vector3.new
local CFrameNew = CFrame.new

--// Services

local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")

--// Tables

local Tabs = {
    AimbotTab = Window:AddTab('Aimbot'),
    VisualsTab = Window:AddTab('Visuals'),
    MiscTab = Window:AddTab('Misc'),
    Settings = Window:AddTab('Settings'),
}

local Sections = {

    --// Aimbot Tab

    Aimbot = Tabs.AimbotTab:AddLeftGroupbox('Aimbot'),
    AimbotSettings = Tabs.AimbotTab:AddRightGroupbox('Aimbot Settings'),
    
    --// Visuals Tab

    Visuals = Tabs.VisualsTab:AddLeftGroupbox('Visuals'),
    VisualSettings = Tabs.VisualsTab:AddRightGroupbox('Configuration'),

    Grenade = Tabs.VisualsTab:AddLeftGroupbox('Grenades'),
    Lighting = Tabs.VisualsTab:AddRightGroupbox('Lighting'),
    Misc = Tabs.MiscTab:AddLeftGroupbox('Misc'),
    Player = Tabs.MiscTab:AddLeftGroupbox('Player'),
}

local FeatureTable = {
    Combat = {
        SilentAim = {Enabled = false, Hitchance = 100, DummyRange = 0, DynamicFOV = false},
        WallCheck = false,
        TeamCheck = false,
        Hitpart = "Head", --// 6 = Torso, 7 = Head
    },
    Visuals = {

        --// Features \\--

        Box = {Enabled = false, Color = Color3.fromRGB(255, 255, 255)},
        Box3D = {Enabled = false, Color = Color3.fromRGB(255, 255, 255), Method = "Flat"},
        Tracers = {Enabled = false, Color = Color3.fromRGB(255, 255, 255), Origin = "Middle", End = "Head"}, --// 7 = head, 6 = torso (index)
        Chams = {Enabled = false, FillColor = Color3.fromRGB(255, 255, 255), OutlineColor = Color3.fromRGB(255, 255, 255), VisibleOnly = false, FillTransparency = 0, OutlineTransparency = 0},
        Dynamic = true,
        TeamCheck = false,
        UseTeamColor = false, --// Team colors dont apply to chams btw

        --// Other \\--

        Lighting = {
            OverrideAmbient = {Enabled = false, Color = Color3.fromRGB(255, 255, 255)},
        },

        Grenade = {
            GrenadeESP = {Enabled = false, Color = Color3.fromRGB(255, 255, 255), Transparency = 0},
            TrailModifier = {Enabled = false, Color = Color3.fromRGB(255, 255, 255), TrailLifetime = 0.55},
        }

    },
    Misc = {
        Player = {
            Fly = {Enabled = false, Speed = 0},
            Bhop = false,
            JumpPowerModifier = {Enabled = false, Power = 50},
            HipHeight = 0,
        }
    },
}

local Storage = {
    Identifiers = {
        Head = Vector3.new(1,1,1),
        Torso = Vector3.new(2,2,1),
    },
    BoxIndex = {
        {1, 2}, {2, 3}, {3, 4}, {4, 1},
        {5, 6}, {6, 7}, {7, 8}, {8, 5},
        {1, 5}, {2, 6}, {3, 7}, {4, 8} 
    },
    ESP = {
        Boxes = {},
        Box3D = {},
        Tracers = {},
        Chams = {},
    },
    Other = {
        ViewportSize = Camera.ViewportSize,
        ClosestPlayer = nil,
    },
}

local Functions = {
    Normal = {},
    ESP = {},
}

--// Objects

local FOVCircle = Drawing.new("Circle")
do --// Drawing object properties

    do --// Circle

        FOVCircle.Transparency = 1
        FOVCircle.Visible = false
        FOVCircle.Color = Color3.fromRGB(255, 255, 255)
        FOVCircle.Radius = 0
        
    end
    
end

local Watermark = Instance.new("ScreenGui", game.CoreGui)
do --// Properties & Rest

    local Main = Instance.new("Frame", Watermark)
    local UICorner = Instance.new("UICorner", Main)
    local Gradient = Instance.new("Frame", Main)
    local UIGradient = Instance.new("UIGradient", Gradient)
    local TextLabel = Instance.new("TextLabel", Main)
    
    do --// Properties
        Watermark.Enabled = false
        Watermark.Name = "Watermark"
    
        Main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Main.BorderSizePixel = 0
        Main.Position = UDim2.new(0.00550314458, 0, 0.00746268639, 0)
        Main.Size = UDim2.new(0.245283023, 0, 0.043532338, 0)
        
        UICorner.CornerRadius = UDim.new(0, 2)
        
        Gradient.Name = "Gradient"
        Gradient.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Gradient.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Gradient.BorderSizePixel = 0
        Gradient.Size = UDim2.new(1, 0, 0.0857142881, 0)
        
        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(43, 255, 114)), ColorSequenceKeypoint.new(0.38, Color3.fromRGB(255, 112, 150)), ColorSequenceKeypoint.new(0.51, Color3.fromRGB(85, 170, 255)), ColorSequenceKeypoint.new(0.71, Color3.fromRGB(85, 36, 255)), ColorSequenceKeypoint.new(0.77, Color3.fromRGB(85, 0, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 139, 44))}
        UIGradient.Parent = Gradient
        
        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.BackgroundTransparency = 1.000
        TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel.BorderSizePixel = 0
        TextLabel.Position = UDim2.new(0, 0, 0.0857142881, 0)
        TextLabel.Size = UDim2.new(1, 0, 0.914285719, 0)
        TextLabel.Font = Enum.Font.RobotoMono
        TextLabel.Text = "homohack | made by @dementia enjoyer"
        TextLabel.TextColor3 = Color3.fromRGB(247, 247, 247)
        TextLabel.TextSize = 12.000
        TextLabel.TextWrapped = true
        TextLabel.TextScaled = true
    end
end

--// Rest

do --// Main
    Library:Notify("I am aware of the optimization issues, they will be fixed in the near future", 5)

    do --// Elements

        do --// Aimbot Tab

            Sections.Aimbot:AddToggle('SilentAim', {
                Text = 'Silent Aim',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Combat.SilentAim.Enabled = Value
                end
            })

            Sections.Aimbot:AddToggle('VisualiseRange', {
                Text = 'Visualise Range',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FOVCircle.Visible = Value
                end
            }):AddColorPicker('VisualiseRangeColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Range Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FOVCircle.Color = Value
                end
            })

            Sections.Aimbot:AddToggle('DynamicRange', {
                Text = 'Dynamic Range',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Combat.SilentAim.DynamicFOV = Value
                end
            })
            Sections.Aimbot:AddSlider('AimbotRange', {
                Text = 'Range',
                Default = 0,
                Min = 0,
                Max = 1000,
                Rounding = 1,
                Compact = false,

                Callback = function(Value)
                    FeatureTable.Combat.SilentAim.DummyRange = Value --// im not gonna use flags, but feel free to switch to it :D
                end
            })

            Sections.Aimbot:AddDropdown('Aimpart', {
                Values = { 'Head', 'Torso', 'Random' },
                Default = 1,
                Multi = false,
            
                Text = 'Aim Part',
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Combat.Hitpart = Value
                end
            })

            --// Aimbot Settings

            Sections.AimbotSettings:AddToggle('WallCheck', {
                Text = 'Wall Check',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Combat.WallCheck = Value
                end
            })

            Sections.AimbotSettings:AddToggle('TeamCheck', {
                Text = 'Team Check',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Combat.TeamCheck = Value
                end
            })

            Sections.AimbotSettings:AddSlider('Hitchance', {
                Text = 'Hitchance',
                Default = 100,
                Min = 0,
                Max = 100,
                Rounding = 1,
                Compact = false,
            
                Callback = function(Value)
                    FeatureTable.Combat.SilentAim.Hitchance = Value
                end
            })
    
        end

        do --// Visuals Tab

            Sections.Visuals:AddToggle('Box', {
                Text = 'Box',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Box.Enabled = Value
                end
            }):AddColorPicker('BoxColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Box Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Box.Color = Value
                end
            })

            Sections.Visuals:AddToggle('Box3D', {
                Text = '3D Box',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Box3D.Enabled = Value
                end
            }):AddColorPicker('Box3DColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Box 3D Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Box3D.Color = Value
                end
            })

            Sections.Visuals:AddToggle('Tracers', {
                Text = 'Tracers',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Tracers.Enabled = Value
                end
            }):AddColorPicker('TracerColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Tracer Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Tracers.Color = Value
                end
            })

            Sections.Visuals:AddToggle('Chams', {
                Text = 'Chams',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Chams.Enabled = Value
                end
            }):AddColorPicker('FillColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Fill Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Chams.FillColor = Value
                end
            }):AddColorPicker('OutlineColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Outline Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Chams.OutlineColor = Value
                end
            })

            --// Settings

            Sections.VisualSettings:AddToggle('ChamsVisOnly', {
                Text = 'Chams Visible Only',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Chams.VisibleOnly = Value
                end
            })

            Sections.VisualSettings:AddToggle('TeamCheck', {
                Text = 'Team Check',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.TeamCheck = Value
                end
            })

            Sections.VisualSettings:AddToggle('TeamColors', {
                Text = 'Use Team Colors',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.UseTeamColor = Value
                end
            })

            Sections.VisualSettings:AddSlider('ChamFillTransparency', {
                Text = 'Cham Fill Transparency',
                Default = 0,
                Min = 0,
                Max = 1,
                Rounding = 1,
                Compact = false,

                Callback = function(Value)
                    FeatureTable.Visuals.Chams.FillTransparency = Value
                end
            })

            Sections.VisualSettings:AddSlider('ChamOutlineTransparency', {
                Text = 'Cham Outline Transparency',
                Default = 0,
                Min = 0,
                Max = 1,
                Rounding = 1,
                Compact = false,

                Callback = function(Value)
                    FeatureTable.Visuals.Chams.OutlineTransparency = Value
                end
            })

            Sections.VisualSettings:AddDropdown('Box3DSize', {
                Values = { 'Flat', 'Full' },
                Default = 1,
                Multi = false,
            
                Text = 'Box 3D Size',
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Box3D.Method = Value
                end
            })

            Sections.VisualSettings:AddDropdown('TracerOrigin', {
                Values = { 'Top', 'Middle', 'Bottom', 'Gun' },
                Default = 2,
                Multi = false,
            
                Text = 'Tracer Origin',
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Tracers.Origin = Value
                end
            })

            Sections.VisualSettings:AddDropdown('TracerEnd', {
                Values = { 'Head', 'Torso' },
                Default = 1,
                Multi = false,
            
                Text = 'Tracer End',
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Tracers.End = Value
                end
            })

            --// Lighting Section

            Sections.Lighting:AddToggle('OverrideAmbient', {
                Text = 'Override Ambient',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Lighting.OverrideAmbient.Enabled = Value
                end
            }):AddColorPicker('AmbientColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Ambient Color',
                Transparency = 0,
            
                Callback = function(Value)
                    if FeatureTable.Visuals.Lighting.OverrideAmbient.Enabled then
                        FeatureTable.Visuals.Lighting.OverrideAmbient.Color = Value
    
                        do --// Properties
                            
                            Functions.Normal:SetAmbient("Ambient", Value)
                            Functions.Normal:SetAmbient("OutdoorAmbient", Value)
                            Functions.Normal:SetAmbient("ColorShift_Top", Value)
                            Functions.Normal:SetAmbient("ColorShift_Bottom", Value)
                            
                        end
                    end
                end
            })

            --// Grenade Section

            Sections.Grenade:AddToggle('Grenade', {
                Text = 'Grenade ESP',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Grenade.GrenadeESP.Enabled = Value
                end
            }):AddColorPicker('GrenadeColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Grenade Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Grenade.GrenadeESP.Color = Value
                end
            })

            Sections.Grenade:AddToggle('TrailModifier', {
                Text = 'Trail Modifier',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Grenade.TrailModifier.Enabled = Value
                end
            }):AddColorPicker('TrailColor', {
                Default = Color3.fromRGB(255, 255, 255),
                Title = 'Trail Color',
                Transparency = 0,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Grenade.TrailModifier.Color = Value
                end
            })

            Sections.Grenade:AddSlider('TrailLifetime', {
                Text = 'Trail Lifetime',
                Default = 0.55,
                Min = 0,
                Max = 10,
                Rounding = 1,
                Compact = false,
            
                Callback = function(Value)
                    FeatureTable.Visuals.Grenade.TrailModifier.TrailLifetime = Value
                end
            })

        end

        do --// Misc Tab

            Sections.Misc:AddToggle('Watermark', {
                Text = 'Watermark',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    Watermark.Enabled = Value
                end
            })

            --// Player section

            Sections.Player:AddToggle('Fly', {
                Text = 'Fly',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.Fly.Enabled = Value
                end
            })

            Sections.Player:AddToggle('Bhop', {
                Text = 'Bhop',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.Bhop = Value
                end
            })

            Sections.Player:AddToggle('JumpModifier', {
                Text = 'Override Jump Power',
                Default = false,
                Tooltip = nil,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.JumpPowerModifier.Enabled = Value
                end
            })

            Sections.Player:AddSlider('JumpPower', {
                Text = 'Jump Power',
                Default = 0,
                Min = 0,
                Max = 80,
                Rounding = 1,
                Compact = false,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.JumpPowerModifier.Power = Value
                end
            })

            Sections.Player:AddSlider('HipHeight', {
                Text = 'Hip Height',
                Default = 0,
                Min = 0,
                Max = 50,
                Rounding = 1,
                Compact = false,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.HipHeight = Value
                end
            })

            Sections.Player:AddSlider('FlySpeed', {
                Text = 'Fly Speed',
                Default = 0,
                Min = 0,
                Max = 50,
                Rounding = 1,
                Compact = false,
            
                Callback = function(Value)
                    FeatureTable.Misc.Player.Fly.Speed = Value
                end
            })

        end
        
    end
    
    do --// Logic

        do --// Functions

            do --// Regular

                do --// Lighting

                    function Functions.Normal:SetAmbient(Property, Value)
                        if FeatureTable.Visuals.Lighting.OverrideAmbient.Enabled then
                            Lighting[Property] = Value
                        end
                    end
                    
                end

                do --// Players

                    function Functions.Normal:GetTeam(Player)
                        if Player ~= nil and Player.Parent ~= nil and Player:FindFirstChildOfClass("Folder") then
                            local Helmet = Player:FindFirstChildWhichIsA("Folder"):FindFirstChildOfClass("MeshPart")
                            if Helmet then
                                if Helmet.BrickColor == BrickColor.new("Black") then
                                    return game.Teams.Phantoms
                                end
                                return game.Teams.Ghosts
                            end
                        end
                    end
                    function Functions.Normal:GetPlayerBodyparts(Player)
                        local Head
                        local Torso
                        local Children = Player:GetChildren()
                        local HeadSize = Storage.Identifiers.Head
                        local TorsoSize = Storage.Identifiers.Torso
                    
                        for i = 1, #Children do
                            local Child = Children[i]
                            if Child:IsA("BasePart") then
                                if Child.Size == HeadSize then
                                    Head = Child
                                elseif Child.Size == TorsoSize then
                                    Torso = Child
                                end
                            end
                        end
                    
                        return { Head = Head, Torso = Torso }
                    end                                      

                    function Functions.Normal:GetPlayers()
                        local PlayerList = {}
                        for i,Teams in Players:GetChildren() do
                            for i,Players in Teams:GetChildren() do
                                table.insert(PlayerList, Players)
                            end
                        end
                        return PlayerList
                    end
                    
                end
                
                do --// LocalPlayer
                    function Functions.Normal:GetGun()
                        for i,Viewmodel in Camera:GetChildren() do
                            if Viewmodel:IsA("Model") and not Viewmodel.Name:find("Arm") then
                                return Viewmodel
                            end
                        end
                        return nil
                    end
                end

                do --// Math

                    function Functions.Normal:Measure(Origin, End)
                        return (Origin - End).Magnitude
                    end

                    function Functions.Normal:GetLength(Table) --// This isnt even math btw, but its not related to any of the other sections so whatever lol
                        local Int = 0
                        for WhatTheSigma in Table do
                            Int += 1
                        end
                        return Int
                    end

                end
    
            end
    
            do --// Aimbot
                
                function Functions.Normal:getClosestPlayer()
                    local Player = nil
                    local Hitpart = nil
                    local Distance = math.huge
                
                    for i, Players in Functions.Normal:GetPlayers() do
                        if Players ~= nil then
                            local Bodyparts = Functions.Normal:GetPlayerBodyparts(Players)

                            local Screen = Camera:WorldToViewportPoint(Bodyparts.Torso.Position)
                            local MeasureDistance = (Vector2.new(Storage.Other.ViewportSize.X / 2, Storage.Other.ViewportSize.Y / 2) - Vector2.new(Screen.X, Screen.Y)).Magnitude
                
                            local PlayerIsVisible = (not FeatureTable.Combat.WallCheck) or Functions.Normal:PlayerVisible(Players, Camera.CFrame.Position, Bodyparts.Torso.Position, {Misc, Ignore, Players:FindFirstChildOfClass("Folder")})
                
                            if MeasureDistance < Distance and MeasureDistance <= FOVCircle.Radius * 1.25 and PlayerIsVisible then
                                Player = Players
                                Distance = MeasureDistance
                
                                if tostring(FeatureTable.Combat.Hitpart):find("Random") then
                                    print("Random")
                                    local Keys = {}
                
                                    do --// WhatTheSigma
                                        for WhatTheSigma in Storage.Identifiers do
                                            table.insert(Keys, WhatTheSigma)
                                        end
                                    end
                
                                    local Index = math.random(1, Functions.Normal:GetLength(Keys))
                                    local Rndm = Keys[Index]
                                    if Rndm ~= "Random" then
                                        Hitpart = Bodyparts[Rndm]
                                    end
                                else
                                    Hitpart = Bodyparts[FeatureTable.Combat.Hitpart]
                                end
                            end
                        end
                    end
                
                    return {Closest = Player, Hitpart = Hitpart}
                end

                function Functions.Normal:PlayerVisible(Player, Origin, End, Ignorelist)

                    local Params = RaycastParams.new()
                    do --// Param Properties

                        Params.FilterDescendantsInstances = Ignorelist
                        Params.FilterType = Enum.RaycastFilterType.Exclude
                        Params.IgnoreWater = true
                        
                    end

                    local CastRay = workspace:Raycast(Origin, End - Origin, Params)
                    if CastRay and CastRay.Instance then
                        if CastRay.Instance:IsDescendantOf(Player) then
                            return true
                        end
                    end
                    return false
        
                end
    
            end
    
            do --// ESP
                function Functions.ESP:Create(Player)
        
                    if FeatureTable.Visuals.Box.Enabled then

                        if not table.find(Storage.ESP.Boxes, Player) then
        
                            local Box = Drawing.new("Square")
                            Box.Color = Color3.fromRGB(255,255,255)
                            Box.Transparency = 1
                            Box.Visible = true
                            Box.Thickness = 1
                            Box.ZIndex = 2
                            
                            do --// Table insert
            
                                table.insert(Storage.ESP.Boxes, Box)
                                table.insert(Storage.ESP.Boxes, Player)
            
                            end
                    
                        end

                    end
                    if FeatureTable.Visuals.Tracers.Enabled then

                        if not table.find(Storage.ESP.Tracers, Player) then
        
                            local Tracer = Drawing.new("Line")
                            Tracer.Transparency = 1
                            Tracer.Visible = true
                            Tracer.Color = Color3.fromRGB(255,255,255)
                            
                            do --// Table insert
            
                                table.insert(Storage.ESP.Tracers, Tracer)
                                table.insert(Storage.ESP.Tracers, Player)
            
                            end
                    
                        end
                        
                    end
                    if FeatureTable.Visuals.Box3D.Enabled then
                        if not table.find(Storage.ESP.Box3D, Player) then
                            local Lines = {}
                            
                            for i = 1, 12 do
                                local Line = Drawing.new("Line")
                                Line.Transparency = 1
                                Line.Color = Color3.fromRGB(255, 255, 255)
                                Line.Visible = false
                                table.insert(Lines, Line)
                            end
                    
                            do --// Table insert
                                table.insert(Storage.ESP.Box3D, Lines)
                                table.insert(Storage.ESP.Box3D, Player)
                            end
                        end
                    end
        
                end
    
                function Functions.ESP:ClearTable(esps, esptable, index)
                    for i = 1, #esps do
                        esps[i]:Destroy()
                    end
                    do --// Table clear
                        table.remove(esptable, index)
                        table.remove(esptable, index-1)
                    end
                end

            end
    
        end
    
        do --// Loops
    
            task.spawn(function()
                while task.wait() do --// gl working with the dogshit code, skids :D
    
                    do --// Combat
    
                        do --// Aimbot
    
                            if FeatureTable.Combat.SilentAim.Enabled then

                                local Enemy = Storage.Other.ClosestPlayer
                                local Target = Enemy.Closest
                                if Target ~= nil and (FeatureTable.Combat.TeamCheck and Functions.Normal:GetTeam(Target) ~= game.Players.LocalPlayer.Team or not FeatureTable.Combat.TeamCheck) then

                                    local Hitpart = Enemy.Hitpart
                                    local Gun = Functions.Normal:GetGun()

                                    if Hitpart and Gun then
                                        for i, GunParts in Gun:GetChildren() do
                                            pcall(function()
                                                local Joints = GunParts:GetJoints()
                                                if GunParts.Name:find("SightMark") or GunParts.Name:find("FlameSUP") or GunParts.Name:find("Flame") then
                                                    local Vector = Vector3New()
                                    
                                                    do --// Hitchance

                                                        local Chance = FeatureTable.Combat.SilentAim.Hitchance
                                                        if Chance < 100 then --// Pretty awful but it works
                                                            local MissChance = (100 - Chance) / 100
                                                            local x = math.random() * 3 - 1
                                                            local y = math.random() * 3 - 1
                                                            local z = math.random() * 3 - 1 
                                                            Vector = Vector3New(x, y, z) * MissChance
                                                        end

                                                    end
                                    
                                                    Joints[1].C0 = Joints[1].Part0.CFrame:ToObjectSpace(CFrame.lookAt(Joints[1].Part1.Position, (Hitpart.Position + Vector)))
                                                end
                                            end)
                                        end
                                    end

                                end

                            end
                            
    
                        end
    
                    end
    
                    do --// Visuals

                        for i,Players in Functions.Normal:GetPlayers() do --// bro... so p1000
                            Functions.ESP:Create(Players)
                        end
    
                        do --// Box ESP
    
                            for i,Player in Storage.ESP.Boxes do --// Box logic (obviously)
                                if typeof(Player) == "Instance" then
    
                                    local Box = Storage.ESP.Boxes[i-1]
                    
                                    if FeatureTable.Visuals.Box.Enabled and Player:IsDescendantOf(workspace) and not tostring(Player:GetFullName()):find(tostring(DeadBodies)) then
                                        local Bodyparts = Functions.Normal:GetPlayerBodyparts(Player)
                                        local Torso = Bodyparts.Torso
                                        if Torso ~= nil then
                                            local Position, OnScreen = Camera:WorldToViewportPoint(Torso.Position) --// Convert to screen pos since we're rendering the boxes on the screen (duh)
    
                                            local Team = Functions.Normal:GetTeam(Player)
                                            local TeamColor = Team.TeamColor
                    
                                            if OnScreen and FeatureTable.Visuals.TeamCheck and tostring(Team) ~= game.Players.LocalPlayer.Team.Name or not FeatureTable.Visuals.TeamCheck then
                    
                                                local PosX = Position.X - (Box.Size.X / 2)
                                                local PosY = Position.Y - (Box.Size.Y / 2)
                                                local Scale = 1000/(Camera.CFrame.Position - Torso.Position).Magnitude*80/Camera.FieldOfView --// Very simple box distance scale
                                                
                                                Box.Position = Vector2.new(PosX, PosY)
                                                Box.Size = Vector2.new(2 * Scale, 3 * Scale)
                                                Box.Visible = true

                                                if FeatureTable.Visuals.UseTeamColor then --// 😭
                                                    if tostring(TeamColor) == "Bright blue" then
                                                        Box.Color = Color3.fromRGB(0, 162, 255)
                                                    elseif tostring(TeamColor) == "Bright orange" then
                                                        Box.Color = Color3.fromRGB(255, 162, 0)
                                                    end
                                                else
                                                    Box.Color = FeatureTable.Visuals.Box.Color
                                                end
                    
                                            else
                    
                                                Functions.ESP:ClearTable({Box}, Storage.ESP.Boxes, i)
                    
                                            end
                    
                                        else
                    
                                            Functions.ESP:ClearTable({Box}, Storage.ESP.Boxes, i)
                    
                                        end
                                    else
                    
                                        Functions.ESP:ClearTable({Box}, Storage.ESP.Boxes, i)
                    
                                    end
                                end
                            end

                        end

                        do --// 3D Box
                            for i, Player in Storage.ESP.Box3D do
                                if typeof(Player) == "Instance" then
                                    local Objects = Storage.ESP.Box3D[i-1]
                                    
                                    if Objects then
                                        if FeatureTable.Visuals.Box3D.Enabled then
                                            local Bodyparts = Functions.Normal:GetPlayerBodyparts(Player)
                                            local Torso = Bodyparts.Torso
                                            local Team = Functions.Normal:GetTeam(Player)
                                            
                                            if Player and Torso and not tostring(Player:GetFullName()):find(tostring(DeadBodies)) and Team and Team.TeamColor then
                                                local a, Visible = Camera:WorldToViewportPoint(Torso.Position)
                                                local TeamColor = Team.TeamColor
                                                local Size = Vector3.new(2, 3, 1.5)
                                                local Corners = {
                                                    Torso.CFrame * CFrameNew(-Size.X, Size.Y, -Size.Z),
                                                    Torso.CFrame * CFrameNew(Size.X, Size.Y, -Size.Z),
                                                    Torso.CFrame * CFrameNew(Size.X, -Size.Y, -Size.Z),
                                                    Torso.CFrame * CFrameNew(-Size.X, -Size.Y, -Size.Z),
                                                    Torso.CFrame * CFrameNew(-Size.X, Size.Y, Size.Z),
                                                    Torso.CFrame * CFrameNew(Size.X, Size.Y, Size.Z),
                                                    Torso.CFrame * CFrameNew(Size.X, -Size.Y, Size.Z),
                                                    Torso.CFrame * CFrameNew(-Size.X, -Size.Y, Size.Z)
                                                }
                                                
                                                if FeatureTable.Visuals.TeamCheck and tostring(Team) ~= game.Players.LocalPlayer.Team.Name or not FeatureTable.Visuals.TeamCheck then
                                                    if FeatureTable.Visuals.Box3D.Method == "Flat" then
                                                        for iA = 1, 4 do
                                                            local Line = Objects[iA]
                                                            Line.Visible = Visible
                                                            if Visible then
                                                                local Next = (iA % 4) + 1
                                                                local ScreenPos1 = Camera:WorldToViewportPoint(Corners[iA].Position)
                                                                local ScreenPos2 = Camera:WorldToViewportPoint(Corners[Next].Position)
                                                                
                                                                Line.From = Vector2.new(ScreenPos1.X, ScreenPos1.Y)
                                                                Line.To = Vector2.new(ScreenPos2.X, ScreenPos2.Y)
                                                                
                                                                if FeatureTable.Visuals.UseTeamColor then
                                                                    if tostring(TeamColor) == "Bright blue" then
                                                                        Line.Color = Color3.fromRGB(0, 162, 255)
                                                                    elseif tostring(TeamColor) == "Bright orange" then
                                                                        Line.Color = Color3.fromRGB(255, 162, 0)
                                                                    end
                                                                else
                                                                    Line.Color = FeatureTable.Visuals.Box3D.Color
                                                                end
                                                            end
                                                        end
                                                    else
                                                        for iB = 1, 12 do
                                                            local Line = Objects[iB]
                                                            Line.Visible = Visible
                                                            
                                                            if Visible then
                                                                local b = Storage.BoxIndex[iB]
                                                                local c = Camera:WorldToViewportPoint(Corners[b[1]].Position)
                                                                local d = Camera:WorldToViewportPoint(Corners[b[2]].Position)
                                                                
                                                                Line.From = Vector2.new(c.X, c.Y)
                                                                Line.To = Vector2.new(d.X, d.Y)
                                                                
                                                                if FeatureTable.Visuals.UseTeamColor then
                                                                    if tostring(TeamColor) == "Bright blue" then
                                                                        Line.Color = Color3.fromRGB(0, 162, 255)
                                                                    elseif tostring(TeamColor) == "Bright orange" then
                                                                        Line.Color = Color3.fromRGB(255, 162, 0)
                                                                    end
                                                                else
                                                                    Line.Color = FeatureTable.Visuals.Box3D.Color
                                                                end
                                                            end
                                                        end
                                                    end
                                                else
                                                    Functions.ESP:ClearTable(Objects, Storage.ESP.Box3D, i)
                                                end
                                            else
                                                Functions.ESP:ClearTable(Objects, Storage.ESP.Box3D, i)
                                            end
                                        else
                                            Functions.ESP:ClearTable(Objects, Storage.ESP.Box3D, i)
                                        end
                                    end
                                end
                            end
                        end
                        do --// Tracer ESP

                            for i,Player in Storage.ESP.Tracers do --// Tracer logic (obviously once again)
                                if typeof(Player) == "Instance" then
    
                                    local Tracer = Storage.ESP.Tracers[i-1]
                    
                                    if FeatureTable.Visuals.Tracers.Enabled and Player:IsDescendantOf(workspace) then
                                        local Bodyparts = Functions.Normal:GetPlayerBodyparts(Player)
                                        local Target = Bodyparts[FeatureTable.Visuals.Tracers.End]
                                        if Target ~= nil and not tostring(Player:GetFullName()):find(tostring(DeadBodies)) then
                                            local Position, OnScreen = Camera:WorldToViewportPoint(Target.Position) --// Convert to screen pos since we're rendering the boxes on the screen (duh)
    
                                            local Team = Functions.Normal:GetTeam(Player)
                                            local TeamColor = Team.TeamColor
                    
                                            if OnScreen and FeatureTable.Visuals.TeamCheck and tostring(Team) ~= game.Players.LocalPlayer.Team.Name or not FeatureTable.Visuals.TeamCheck then
                                                
                                                local Origin = FeatureTable.Visuals.Tracers.Origin
                                                local Value
                                                if Origin ~= "Gun" then

                                                    if Origin == "Top" then
                                                        Value = 0 
                                                    elseif Origin == "Middle" then
                                                        Value = Storage.Other.ViewportSize.Y / 2
                                                    elseif Origin == "Bottom" then
                                                        Value = Storage.Other.ViewportSize.Y
                                                    end

                                                    Tracer.From = Vector2.new(Storage.Other.ViewportSize.X / 2, Value)
                                                    Tracer.To = Vector2.new(Position.X, Position.Y)

                                                else

                                                    local Gun = Functions.Normal:GetGun()
                                                    if Gun ~= nil and Gun:FindFirstChild("Flame") then
                                                        local TipPosition = Camera:WorldToViewportPoint(Gun["Flame"].Position) or Camera:WorldToViewportPoint(Gun["FlameSUP"].Position)
                                                        Tracer.From = Vector2.new(TipPosition.X, TipPosition.Y)
                                                        Tracer.To = Vector2.new(Position.X, Position.Y)
                                                    else
                                                        Functions.ESP:ClearTable({Tracer}, Storage.ESP.Tracers, i)
                                                    end

                                                end

                                                if FeatureTable.Visuals.UseTeamColor then
                                                    if tostring(TeamColor) == "Bright blue" then
                                                        Tracer.Color = Color3.fromRGB(0, 162, 255)
                                                    elseif tostring(TeamColor) == "Bright orange" then
                                                        Tracer.Color = Color3.fromRGB(255, 162, 0)
                                                    end
                                                else
                                                    Tracer.Color = FeatureTable.Visuals.Tracers.Color
                                                end
                    
                                            else
                    
                                                Functions.ESP:ClearTable({Tracer}, Storage.ESP.Tracers, i)
                    
                                            end
                    
                                        else
                    
                                            Functions.ESP:ClearTable({Tracer}, Storage.ESP.Tracers, i)
                    
                                        end
                                    else
                    
                                        Functions.ESP:ClearTable({Tracer}, Storage.ESP.Tracers, i)
                    
                                    end
                                end
                            end
                            
                        end

                        do --// Cham ESP

                            for i, Player in Functions.Normal:GetPlayers() do
                                if Player ~= nil then
                                    
                                    local Highlight = Player:FindFirstChildOfClass("Highlight")
                                    local Team = Functions.Normal:GetTeam(Player)
                                    local TeamColor = Team.TeamColor
                            
                                    if not tostring(Player:GetFullName()):find(tostring(DeadBodies)) and FeatureTable.Visuals.Chams.Enabled and (FeatureTable.Visuals.TeamCheck and tostring(Team) ~= game.Players.LocalPlayer.Team.Name or not FeatureTable.Visuals.TeamCheck) then
                                        
                                        if not Highlight then
                                            Highlight = Instance.new("Highlight", Player)
                                        end
                            
                                        Highlight.Enabled = true
                                        Highlight.Adornee = Player
                                        Highlight.FillColor = FeatureTable.Visuals.Chams.FillColor
                                        Highlight.OutlineColor = FeatureTable.Visuals.Chams.OutlineColor
                                        Highlight.FillTransparency = FeatureTable.Visuals.Chams.FillTransparency
                                        Highlight.OutlineTransparency = FeatureTable.Visuals.Chams.OutlineTransparency
                                        Highlight.DepthMode = FeatureTable.Visuals.Chams.VisibleOnly and Enum.HighlightDepthMode.Occluded or Enum.HighlightDepthMode.AlwaysOnTop

                                        if FeatureTable.Visuals.UseTeamColor then --// 😭
                                            if tostring(TeamColor) == "Bright blue" then
                                                Highlight.FillColor = Color3.fromRGB(0, 162, 255)
                                                Highlight.OutlineColor = Color3.fromRGB(0, 162, 255)
                                            elseif tostring(TeamColor) == "Bright orange" then
                                                Highlight.FillColor = Color3.fromRGB(255, 162, 0)
                                                Highlight.OutlineColor = Color3.fromRGB(255, 162, 0)
                                            end
                                        else
                                            Highlight.FillColor = FeatureTable.Visuals.Chams.FillColor
                                            Highlight.OutlineColor = FeatureTable.Visuals.Chams.OutlineColor
                                        end
                  
                                    else

                                        if Highlight then
                                            Highlight:Destroy()
                                        end

                                    end
									
                                end
                            end
                            
                        end
    
                    end

                    do --// Misc

                        do --// Player

                            local LocalPlayer = Ignore:FindFirstChild("RefPlayer")
                            if LocalPlayer then
                                local Humanoid = LocalPlayer:FindFirstChildOfClass("Humanoid")

                                do --// Player Modifications

                                    if Humanoid then
    
                                        if FeatureTable.Misc.Player.JumpPowerModifier.Enabled then
                                            Humanoid.JumpPower = FeatureTable.Misc.Player.JumpPowerModifier.Power
                                        end
                                        if FeatureTable.Misc.Player.Fly.Enabled then

                                            local Direction = Vector3New()

                                            if LocalPlayer then

                                                local LookVector = Camera.CFrame.LookVector * Vector3New(1, 0, 1)
                                                local Directions = { --// Very optimized real!
                                                    [Enum.KeyCode.W] = LookVector,
                                                    [Enum.KeyCode.S] = -LookVector,
                                                    [Enum.KeyCode.D] = Vector3New(-LookVector.Z, 0, LookVector.X),
                                                    [Enum.KeyCode.A] = Vector3New(LookVector.Z, 0, -LookVector.X),
                                                    [Enum.KeyCode.Space] = Vector3New(0, 5 * 5, 0),
                                                    [Enum.KeyCode.LeftControl] = Vector3New(0, -5 * 5, 0)
                                                }
                                                
                                                for Key, Dir in Directions do
                                                    if UserInputService:IsKeyDown(Key) then
                                                        Direction = Direction + Dir
                                                    end
                                                end
                                                
                                                if Direction.Magnitude > 0 then
                                                    Direction = Direction.Unit
                                                    LocalPlayer.HumanoidRootPart.Velocity = Direction * FeatureTable.Misc.Player.Fly.Speed
                                                    LocalPlayer.HumanoidRootPart.Anchored = false
                                                else
                                                    LocalPlayer.HumanoidRootPart.Velocity = Vector3New()
                                                    LocalPlayer.HumanoidRootPart.Anchored = true
                                                end

                                            end

                                        end
                                        if UserInputService:IsKeyDown(Enum.KeyCode.Space) and FeatureTable.Misc.Player.Bhop then
                                            Humanoid.Jump = true
                                        end
                                        Humanoid.HipHeight = FeatureTable.Misc.Player.HipHeight
                                    
                                    end
                                    
                                end

                            end
                            
                        end
                        
                    end

                    do --// Extra

                        Storage.Other.ClosestPlayer = Functions.Normal:getClosestPlayer()
                        
                        do --// FOV Circle

                            local Dynamic = FeatureTable.Combat.SilentAim.DummyRange / math.tan(math.rad(Camera.FieldOfView / 2))
                            FOVCircle.Position = Vector2.new(Storage.Other.ViewportSize.X/2, Storage.Other.ViewportSize.Y/2)

                            if FeatureTable.Combat.SilentAim.DynamicFOV then
                                FOVCircle.Radius = Dynamic
                            else
                                FOVCircle.Radius = FeatureTable.Combat.SilentAim.DummyRange
                            end
                            
                        end

                    end
    
                end
            end)
    
        end
    
        do --// Connections
            
            Camera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
                Storage.Other.ViewportSize = Camera.ViewportSize
            end)

            do --// Lighting (I love this part)

                Lighting:GetPropertyChangedSignal("Ambient"):Connect(function()
                    Functions.Normal:SetAmbient("Ambient", FeatureTable.Visuals.Lighting.OverrideAmbient.Color)
                end)

                Lighting:GetPropertyChangedSignal("OutdoorAmbient"):Connect(function()
                    Functions.Normal:SetAmbient("OutdoorAmbient", FeatureTable.Visuals.Lighting.OverrideAmbient.Color)
                end)

                Lighting:GetPropertyChangedSignal("ColorShift_Top"):Connect(function()
                    Functions.Normal:SetAmbient("ColorShift_Top", FeatureTable.Visuals.Lighting.OverrideAmbient.Color)
                end)

                Lighting:GetPropertyChangedSignal("ColorShift_Bottom"):Connect(function()
                    Functions.Normal:SetAmbient("ColorShift_Bottom", FeatureTable.Visuals.Lighting.OverrideAmbient.Color)
                end)
                
            end

            Misc.ChildAdded:Connect(function(Child)
                if tostring(Child.Name):find("Trigger") then 
                    if FeatureTable.Visuals.Grenade.GrenadeESP.Enabled then
                        local Billboard = Instance.new("BillboardGui", Child)
                        local Frame = Instance.new("Frame", Billboard)
                        local UICorner = Instance.new("UICorner", Frame)
                        
                        do --// Properties
                            do --// BillboardGui
                                Billboard.Enabled = true
                                Billboard.AlwaysOnTop = true
                                Billboard.Size = UDim2.new(1, 0, 1, 0)
                                Billboard.Adornee = Child
                            end
                            do --// Frame
                                Frame.Size = UDim2.new(1, 0, 1, 0)
                                Frame.BackgroundTransparency = FeatureTable.Visuals.Grenade.GrenadeESP.Transparency
                                Frame.BackgroundColor3 = FeatureTable.Visuals.Grenade.GrenadeESP.Color
                            end
                            do --// UICorner
                                UICorner.CornerRadius = UDim.new(0, 50)
                            end
                        end
                    end
                    if FeatureTable.Visuals.Grenade.TrailModifier.Enabled then
                        local Trail = Child:WaitForChild("Trail")
                        Trail.Lifetime = FeatureTable.Visuals.Grenade.TrailModifier.TrailLifetime
                        Trail.Color = ColorSequence.new(FeatureTable.Visuals.Grenade.TrailModifier.Color)
                    end
                end
            end)
            
            
        end
    
        --// Made by @dementia enjoyer 😁
    
    end
    
end

Library:OnUnload(function()
    Library.Unloaded = true
end)

local MenuGroup = Tabs['Settings']:AddLeftGroupbox('Menu')
MenuGroup:AddButton('Unload', function() Library:Unload() end)

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })
ThemeManager:SetFolder('Homohack')
SaveManager:SetFolder('Homohack/PhantomForces')

SaveManager:BuildConfigSection(Tabs['Settings'])
ThemeManager:ApplyToTab(Tabs['Settings'])
SaveManager:LoadAutoloadConfig()
    end,
 })




 

 
 


---[THIRD SECTION]---

 local TeleportTab = Window:CreateTab("Misc.", nil) -- Title, Image
 local TeleportSection = TeleportTab:CreateSection("Non GUI Exploits")

 local Button = TeleportTab:CreateButton({
    Name = "Speed cheat (will reset back to normal speed upon death)",
    Callback = function()
        getgenv().TpWalking = true
        getgenv().Speed = 1.1
        
        local speaker = game:GetService("Players").LocalPlayer
        local chr = speaker.Character
        local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
        local hb = game:GetService("RunService").Heartbeat
        while getgenv().TpWalking and chr and hum and hum.Parent do
            local delta = hb:Wait()
            if hum.MoveDirection.Magnitude > 0 then
                chr:TranslateBy(hum.MoveDirection * tonumber(getgenv().Speed) * delta * 10)
            else
                chr:TranslateBy(hum.MoveDirection * delta * 10)
            end
        end
    end,
 })

 local Slider = TeleportTab:CreateSlider({
    Name = "speed slidder (CANNOT BE DECREASED)",
    Range = {0,1},
    Increment = 0.000000000000000000000000000000000000000000000000000000000000000000001,
    Suffix = "Speed test",
    CurrentValue = 0,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        getgenv().TpWalking = true
        getgenv().Speed = 0.02
         
        local speaker = game:GetService("Players").LocalPlayer
        local chr = speaker.Character
        local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
        local hb = game:GetService("RunService").Heartbeat
        while getgenv().TpWalking and chr and hum and hum.Parent do
            local delta = hb:Wait()
            if hum.MoveDirection.Magnitude > 0 then
                chr:TranslateBy(hum.MoveDirection * tonumber(getgenv().Speed) * delta * 10)
            else
                chr:TranslateBy(hum.MoveDirection * delta * 10)
            end
        end
    end,
 })

 local Button = TeleportTab:CreateButton({
    Name = "fullbright",
    Callback = function()
        pcall(function()
            local lighting = game:GetService("Lighting");
            lighting.Ambient = Color3.fromRGB(255, 255, 255);
            lighting.Brightness = 1;
            lighting.FogEnd = 1e10;
            for i, v in pairs(lighting:GetDescendants()) do
                if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("SunRaysEffect") then
                    v.Enabled = false;
                end;
            end;
            lighting.Changed:Connect(function()
                lighting.Ambient = Color3.fromRGB(255, 255, 255);
                lighting.Brightness = 1;
                lighting.FogEnd = 1e10;
            end);
            spawn(function()
                local character = game:GetService("Players").LocalPlayer.Character;
                while wait() do
                    repeat wait() until character ~= nil;
                    if not character.HumanoidRootPart:FindFirstChildWhichIsA("PointLight") then
                        local headlight = Instance.new("PointLight", character.HumanoidRootPart);
                        headlight.Brightness = 1;
                        headlight.Range = 60;
                    end;
                end;
            end);
        end)
    end,
 })

 local Button = TeleportTab:CreateButton({
    Name = "Invisible toggle (anticheat will fuck you in crim)",
    Callback = function()
        local ScriptStarted = false
local Keybind = "E" --Set to whatever you want, has to be the name of a KeyCode Enum.
local Transparency = true --Will make you slightly transparent when you are invisible. No reason to disable.
local NoClip = false --Will make your fake character no clip.
 
local Player = game:GetService("Players").LocalPlayer
local RealCharacter = Player.Character or Player.CharacterAdded:Wait()
 
local IsInvisible = false
 
RealCharacter.Archivable = true
local FakeCharacter = RealCharacter:Clone()
local Part
Part = Instance.new("Part", workspace)
Part.Anchored = true
Part.Size = Vector3.new(200, 1, 200)
Part.CFrame = CFrame.new(0, -500, 0) --Set this to whatever you want, just far away from the map.
Part.CanCollide = true
FakeCharacter.Parent = workspace
FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
 
for i, v in pairs(RealCharacter:GetChildren()) do
  if v:IsA("LocalScript") then
      local clone = v:Clone()
      clone.Disabled = true
      clone.Parent = FakeCharacter
  end
end
if Transparency then
  for i, v in pairs(FakeCharacter:GetDescendants()) do
      if v:IsA("BasePart") then
          v.Transparency = 0.7
      end
  end
end
local CanInvis = true
function RealCharacterDied()
  CanInvis = false
  RealCharacter:Destroy()
  RealCharacter = Player.Character
  CanInvis = true
  isinvisible = false
  FakeCharacter:Destroy()
  workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid
 
  RealCharacter.Archivable = true
  FakeCharacter = RealCharacter:Clone()
  Part:Destroy()
  Part = Instance.new("Part", workspace)
  Part.Anchored = true
  Part.Size = Vector3.new(200, 1, 200)
  Part.CFrame = CFrame.new(9999, 9999, 9999) --Set this to whatever you want, just far away from the map.
  Part.CanCollide = true
  FakeCharacter.Parent = workspace
  FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
 
  for i, v in pairs(RealCharacter:GetChildren()) do
      if v:IsA("LocalScript") then
          local clone = v:Clone()
          clone.Disabled = true
          clone.Parent = FakeCharacter
      end
  end
  if Transparency then
      for i, v in pairs(FakeCharacter:GetDescendants()) do
          if v:IsA("BasePart") then
              v.Transparency = 0.7
          end
      end
  end
 RealCharacter.Humanoid.Died:Connect(function()
 RealCharacter:Destroy()
 FakeCharacter:Destroy()
 end)
 Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
end
RealCharacter.Humanoid.Died:Connect(function()
 RealCharacter:Destroy()
 FakeCharacter:Destroy()
 end)
Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
local PseudoAnchor
game:GetService "RunService".RenderStepped:Connect(
  function()
      if PseudoAnchor ~= nil then
          PseudoAnchor.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
      end
       if NoClip then
      FakeCharacter.Humanoid:ChangeState(11)
       end
  end
)
 
PseudoAnchor = FakeCharacter.HumanoidRootPart
local function Invisible()
  if IsInvisible == false then
      local StoredCF = RealCharacter.HumanoidRootPart.CFrame
      RealCharacter.HumanoidRootPart.CFrame = FakeCharacter.HumanoidRootPart.CFrame
      FakeCharacter.HumanoidRootPart.CFrame = StoredCF
      RealCharacter.Humanoid:UnequipTools()
      Player.Character = FakeCharacter
      workspace.CurrentCamera.CameraSubject = FakeCharacter.Humanoid
      PseudoAnchor = RealCharacter.HumanoidRootPart
      for i, v in pairs(FakeCharacter:GetChildren()) do
          if v:IsA("LocalScript") then
              v.Disabled = false
          end
      end
 
      IsInvisible = true
  else
      local StoredCF = FakeCharacter.HumanoidRootPart.CFrame
      FakeCharacter.HumanoidRootPart.CFrame = RealCharacter.HumanoidRootPart.CFrame
 
      RealCharacter.HumanoidRootPart.CFrame = StoredCF
 
      FakeCharacter.Humanoid:UnequipTools()
      Player.Character = RealCharacter
      workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid
      PseudoAnchor = FakeCharacter.HumanoidRootPart
      for i, v in pairs(FakeCharacter:GetChildren()) do
          if v:IsA("LocalScript") then
              v.Disabled = true
          end
      end
      IsInvisible = false
  end
end
 
game:GetService("UserInputService").InputBegan:Connect(
  function(key, gamep)
      if gamep then
          return
      end
      if key.KeyCode.Name:lower() == Keybind:lower() and CanInvis and RealCharacter and FakeCharacter then
          if RealCharacter:FindFirstChild("HumanoidRootPart") and FakeCharacter:FindFirstChild("HumanoidRootPart") then
              Invisible()
          end
      end
  end
)
local Sound = Instance.new("Sound",game:GetService("SoundService"))
Sound.SoundId = "rbxassetid://232127604"
Sound:Play()
game:GetService("StarterGui"):SetCore("SendNotification",{["Title"] = "Invisible Toggle Loaded",["Text"] = "Press "..Keybind.." to become change visibility.",["Duration"] = 20,["Button1"] = "Okay."})
 

    end,
 })

 local Button = TeleportTab:CreateButton({
    Name = "WallBang (works only thru 1-2 walls)",
    Callback = function()
        game:service[[Workspace]]:FindFirstChild('Map'):FindFirstChild('Parts'):FindFirstChild('M_Parts').Parent = game:service[[Workspace]]:FindFirstChild('Characters')
 
    end,
 })
 

 local PhantomTab = Window:CreateTab("Info", nil) -- Title, Image
 local PhantomSection = PhantomTab:CreateSection("what do i do?")

    local Paragraph = PhantomTab:CreateParagraph({Title = "What the hell are these section's?", Content = "In [ Sigma GUI's] i have put together some scripts as easy as that. In the [ Misc ] section i have mostly scripts that do not have any sort of GUI which is why There's a Misc section."})

        local Paragraph = PhantomTab:CreateParagraph({Title = "Legitinality?", Content = "Legitinality is a Criminality GUI half of the toggles are broken but the important ones work such as Aimbot/aimlock which you can toggle in firstPerson by click y to toggle it on and off (true=on and false=off) theres Player, Register/Safe and Dealer Esp  (note: the Inf Staminia may or maynot work.)"})

        local Paragraph = PhantomTab:CreateParagraph({Title = "What is This Fling GUI?", Content = "The fling Gui is justa Gui thats designed to fling people in games that have collision on it works in almost every game so people have asked what the dino anim and stuff is dont mind any of that its not supposed to be used all you need to know is the fling the standard power is 1000-9999 so just have fun and go wild"})

        local Paragraph = PhantomTab:CreateParagraph({Title = "What is Sigmanality", Content = "Is a pretty good script with many esp options suck as health esp box esp and literally just their avatar will glow thru wall and it includes a jump And theres a anti gravity jump option which makes you feel like you're on the moon"})

        local Paragraph = PhantomTab:CreateParagraph({Title = "What is The strongest sigma grounds?", Content = "it is mostly teleports"})

        local Paragraph = PhantomTab:CreateParagraph({Title = "What is this ''WallBang'' Script?", Content = "WallBang is a script that lets you shot thru a wall which can help in many Situations. Such as (if someone locks you out of a building you can just shoot them thru the door or the wall.) (only shoots thru 1-2 walls)"})

        local Paragraph = PhantomTab:CreateParagraph({Title = "What is a Invisible toggle script?", Content = "It is just what it says in the name its a script that makes you invisible but unable to shoot so you cant shoot but they cant see you or shoot you (DONT USE IN CRIM THE ANTICHEAT WILL BREAK UR GAME) (THE TOGGLE BUTTON IS E)"})

        local Paragraph = PhantomTab:CreateParagraph({Title = "What is CrimSkid Hub?", Content = "CrimSkid Is just a Cheat hub. Some of its script work some dont as simple as that"})

        local Paragraph = PhantomTab:CreateParagraph({Title = "(NEW) What is Destruction hub?", Content = "Its a hub that is mostly like anyother but it includes a Btool that im pretty sure is only visible to you but it works like noclip you can walk or fall right thru just like noclip to others but for you you can see thru for you its a hole"})

        local Paragraph = PhantomTab:CreateParagraph({Title = "(NEW) What is this Sneaky aimbot?", Content = "its basicly just a aim assist that looks more natrual than locking on to other players but its almost the same as in legitinality only that it doesnt lock in like normal it just looks like if YOU were aiming (but a bit better probably)"})

        local Paragraph = PhantomTab:CreateParagraph({Title = "(NEW) What is Music Player", Content = "Its just a music player where you can tone the volume, speed and song (Speed:if you set it to 1 its just gonna be normal if you set it to 0.5 it will be slowed down with lower pitch and its you do 1.5 its gonna be higher pitch and faster)(sound its just gonna be louder to quieter 10 is normal anything under or above is either louder or quieter) (sound id: You just put your roblox song id in there and thats what song its gonna play)"})

        local UpdateTab = Window:CreateTab("Update Logs", nil) -- Title, Image
 local UpdateSection = UpdateTab:CreateSection("UPDATASSS!")

 local Paragraph = UpdateTab:CreateParagraph({Title = "What's new?", Content = "I have added a new GUI, New more slick aimbot and a Music Player."})

 local Paragraph = UpdateTab:CreateParagraph({Title = "What errors are trying to get fixed?", Content = "I'm currently working on making the Arsenal script work as a button, fixing the OpenGUI, Getting the Phantom forces script to work, and im trying to fix the gun blur when you open the script."})

 local Paragraph = UpdateTab:CreateParagraph({Title = ". . .", Content = "All info about these scripts are in the info section if you wonder what they are."})
    